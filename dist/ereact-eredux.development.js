(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["EReactERedux"] = factory();
	else
		root["EReactERedux"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/ereact/dist/ereact.development.js":
/*!********************************************************!*\
  !*** ./node_modules/ereact/dist/ereact.development.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n  if (true) module.exports = factory();else {}\n})(window, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"/static\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    {\n      /***/\n      \"./src/component.js\":\n      /*!**************************!*\\\n        !*** ./src/component.js ***!\n        \\**************************/\n\n      /*! exports provided: Component, buildComponent, updateComponent */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Component\\\", function() { return Component; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"buildComponent\\\", function() { return buildComponent; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"updateComponent\\\", function() { return updateComponent; });\\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \\\"./src/constants.js\\\");\\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render */ \\\"./src/render.js\\\");\\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \\\"./src/utils.js\\\");\\n\\n\\n\\nvar willRenderQueue = [];\\n\\nfunction Component(props, context) {\\n  this._dirty = false;\\n  this.props = props || {};\\n  this.context = context || {};\\n  this._renderCallbacks = [];\\n}\\n\\nObject.assign(Component.prototype, {\\n  setState: function setState(state, callback) {\\n    if (!this.prevState) {\\n      this.prevState = this.state;\\n    }\\n\\n    this.state = Object.assign({}, this.state, state);\\n\\n    if (typeof callback === 'function') {\\n      this._renderCallbacks.push(callback);\\n    }\\n\\n    var oldNode = this[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]];\\n    var dom = oldNode.dom,\\n        element = oldNode.element;\\n    var parentDom = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(dom) ? dom[0].parentNode : dom.parentNode;\\n    updateComponent(_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"ASYNC_RENDER\\\"], parentDom, oldNode, element);\\n  },\\n  forceUpdate: function forceUpdate(callback) {\\n    if (typeof callback === 'function') {\\n      this._renderCallbacks.push(callback);\\n    }\\n\\n    var oldNode = this[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]];\\n    var dom = oldNode.dom,\\n        element = oldNode.element;\\n    var parentDom = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(dom) ? dom[0].parentNode : dom.parentNode;\\n    updateComponent(_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"FORCE_RENDER\\\"], parentDom, oldNode, element);\\n  },\\n  render: function render() {}\\n});\\n\\nvar buildComponent = function buildComponent(element, context) {\\n  var type = element.type,\\n      props = element.props;\\n  var instance = null;\\n  instance = createComponent(type, props, context);\\n  setComponentProps(instance, props);\\n  instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]] = instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]] || {\\n    element: element\\n  };\\n  renderComponent(instance, context);\\n  return instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]];\\n};\\n\\nvar updateComponent = function updateComponent(renderMode, parentDom, oldNode, element, context, isReceiveProps) {\\n  var instance = oldNode.instance;\\n\\n  if (isReceiveProps) {\\n    setComponentProps(instance, element.props);\\n  }\\n\\n  var props = instance.props;\\n  var state = instance.state;\\n  var prevProps = instance.prevProps || props;\\n  var prevState = instance.prevState || state;\\n  var prevContext = instance.prevContext || context;\\n  var skipRender = false;\\n\\n  if (renderMode === _constants__WEBPACK_IMPORTED_MODULE_0__[\\\"ASYNC_RENDER\\\"]) {\\n    if (!instance._dirty && willRenderQueue.push({\\n      instance: instance,\\n      parentDom: parentDom,\\n      oldNode: oldNode,\\n      element: element,\\n      context: context\\n    }) === 1) {\\n      // only first time\\n      instance._dirty = true;\\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"defer\\\"])(function () {\\n        var _willRenderQueue$pop = willRenderQueue.pop(),\\n            nextInstance = _willRenderQueue$pop.instance,\\n            nextParentDom = _willRenderQueue$pop.parentDom,\\n            nextOldNode = _willRenderQueue$pop.oldNode,\\n            nextElement = _willRenderQueue$pop.element,\\n            nextContext = _willRenderQueue$pop.context;\\n\\n        if (nextInstance._dirty) {\\n          updateComponent(_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"SYNC_RENDER\\\"], nextParentDom, nextOldNode, nextElement, nextContext);\\n        }\\n      });\\n    }\\n\\n    return;\\n  }\\n\\n  instance._dirty = false;\\n  instance.props = prevProps;\\n  instance.state = prevState;\\n  instance.context = prevContext;\\n\\n  if (renderMode !== _constants__WEBPACK_IMPORTED_MODULE_0__[\\\"FORCE_RENDER\\\"] && typeof instance.shouldComponentUpdate === 'function' && instance.shouldComponentUpdate(props, state) === false) {\\n    skipRender = true;\\n  } else if (typeof instance.componentWillUpdate === 'function') {\\n    instance.componentWillUpdate(props, state);\\n  }\\n\\n  instance.props = props;\\n  instance.state = state;\\n  instance.context = context;\\n  instance.prevProps = instance.prevState = instance.prevContext = null;\\n\\n  if (!skipRender) {\\n    if (typeof instance.getChildContext === 'function') {\\n      context = Object.assign({}, context, instance.getChildContext());\\n    }\\n\\n    var childElement = instance.render();\\n    var oldChildNode = oldNode.childNode;\\n    var childNode = Object(_render__WEBPACK_IMPORTED_MODULE_1__[\\\"reconcile\\\"])(parentDom, oldChildNode, childElement, context);\\n    var dom = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(childNode) ? childNode.map(function (n) {\\n      return n.dom;\\n    }) : childNode.dom;\\n    Object.assign(oldNode, {\\n      dom: dom,\\n      childNode: childNode,\\n      element: element\\n    });\\n\\n    if (typeof instance.componentDidUpdate === 'function') {\\n      instance.componentDidUpdate(prevProps, prevState);\\n    }\\n\\n    while (instance._renderCallbacks.length) {\\n      instance._renderCallbacks.pop().call(instance);\\n    }\\n  }\\n\\n  return oldNode;\\n};\\n\\nvar createComponent = function createComponent(Constructor, props, context) {\\n  var instance;\\n\\n  if (!(Constructor.prototype && Constructor.prototype.render)) {\\n    var render = Constructor;\\n\\n    Constructor = function Constructor(props, context) {\\n      Component.prototype.constructor.bind(this, props, context);\\n    };\\n\\n    Constructor.prototype = Component.prototype;\\n\\n    Constructor.prototype.render = function () {\\n      return render(this.props);\\n    };\\n  }\\n\\n  instance = new Constructor(props, context);\\n  Component.call(instance, props, context);\\n  instance.constructor = Constructor;\\n  return instance;\\n};\\n\\nvar setComponentProps = function setComponentProps(instance, props) {\\n  var isUpdate = !!instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]];\\n\\n  if (isUpdate && typeof instance.componentWillReceiveProps === 'function') {\\n    instance.componentWillReceiveProps(props);\\n  } else if (!isUpdate && typeof instance.componentWillMount === 'function') {\\n    instance.componentWillMount();\\n  }\\n\\n  if (!instance.prevProps) instance.prevProps = instance.props;\\n  if (!instance.prevContext) instance.prevContext = instance.context;\\n  instance.props = props;\\n};\\n\\nvar renderComponent = function renderComponent(instance, context) {\\n  instance.prevProps = instance.prevState = instance.prevContext = null;\\n\\n  if (typeof instance.getChildContext === 'function') {\\n    context = Object.assign({}, context, instance.getChildContext());\\n  }\\n\\n  var childElement = instance.render();\\n  var childNode = null;\\n  var dom = null;\\n\\n  if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(childElement)) {\\n    childNode = childElement.map(function (element) {\\n      return Object(_render__WEBPACK_IMPORTED_MODULE_1__[\\\"createNode\\\"])(element, context);\\n    });\\n    dom = childNode.map(function (n) {\\n      return n.dom;\\n    });\\n  } else {\\n    childNode = Object(_render__WEBPACK_IMPORTED_MODULE_1__[\\\"createNode\\\"])(childElement, context);\\n    dom = childNode.dom;\\n  }\\n\\n  Object.assign(instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]], {\\n    dom: dom,\\n    childNode: childNode,\\n    instance: instance\\n  });\\n\\n  if (typeof instance.componentDidMount === 'function') {\\n    instance.componentDidMount();\\n  }\\n\\n  while (instance._renderCallbacks.length) {\\n    instance._renderCallbacks.pop().call(instance);\\n  }\\n};\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/component.js\\n\");\n        /***/\n      },\n\n      /***/\n      \"./src/constants.js\":\n      /*!**************************!*\\\n        !*** ./src/constants.js ***!\n        \\**************************/\n\n      /*! exports provided: ATTR_KEY, TEXT_ELEMENT, SYNC_RENDER, ASYNC_RENDER, FORCE_RENDER, INTERNAL_NODE */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ATTR_KEY\\\", function() { return ATTR_KEY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"TEXT_ELEMENT\\\", function() { return TEXT_ELEMENT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SYNC_RENDER\\\", function() { return SYNC_RENDER; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ASYNC_RENDER\\\", function() { return ASYNC_RENDER; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"FORCE_RENDER\\\", function() { return FORCE_RENDER; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"INTERNAL_NODE\\\", function() { return INTERNAL_NODE; });\\n\\n\\nvar TEXT_ELEMENT = \\\"@ereact/__text_element__\\\";\\nvar INTERNAL_NODE = '@ereact/__internal_node';\\nvar ATTR_KEY = '@ereact/__attr_key__'; // Render mode constants\\n\\nvar SYNC_RENDER = '@ereact/render_sync';\\nvar ASYNC_RENDER = '@ereact/render_async';\\nvar FORCE_RENDER = '@ereact/force_update';\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uc3RhbnRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRVJlYWN0Ly4vc3JjL2NvbnN0YW50cy5qcz81ZmIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgVEVYVF9FTEVNRU5UID0gYEBlcmVhY3QvX190ZXh0X2VsZW1lbnRfX2A7XG5cbmNvbnN0IElOVEVSTkFMX05PREUgPSAnQGVyZWFjdC9fX2ludGVybmFsX25vZGUnO1xuXG5jb25zdCBBVFRSX0tFWSA9ICdAZXJlYWN0L19fYXR0cl9rZXlfXyc7XG5cbi8vIFJlbmRlciBtb2RlIGNvbnN0YW50c1xuY29uc3QgU1lOQ19SRU5ERVIgPSAnQGVyZWFjdC9yZW5kZXJfc3luYyc7XG5jb25zdCBBU1lOQ19SRU5ERVIgPSAnQGVyZWFjdC9yZW5kZXJfYXN5bmMnO1xuY29uc3QgRk9SQ0VfUkVOREVSID0gJ0BlcmVhY3QvZm9yY2VfdXBkYXRlJztcblxuZXhwb3J0IHsgQVRUUl9LRVksIFRFWFRfRUxFTUVOVCwgU1lOQ19SRU5ERVIsIEFTWU5DX1JFTkRFUiwgRk9SQ0VfUkVOREVSLCBJTlRFUk5BTF9OT0RFIH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./src/constants.js\\n\");\n        /***/\n      },\n\n      /***/\n      \"./src/index.js\":\n      /*!**********************!*\\\n        !*** ./src/index.js ***!\n        \\**********************/\n\n      /*! exports provided: default */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render */ \\\"./src/render.js\\\");\\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./component */ \\\"./src/component.js\\\");\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = ({\\n  createElement: _render__WEBPACK_IMPORTED_MODULE_0__[\\\"createElement\\\"],\\n  render: _render__WEBPACK_IMPORTED_MODULE_0__[\\\"render\\\"],\\n  Component: _component__WEBPACK_IMPORTED_MODULE_1__[\\\"Component\\\"]\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9FUmVhY3QvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIGNyZWF0ZUVsZW1lbnQgfSBmcm9tICcuL3JlbmRlcic7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudCc7XG5cbmV4cG9ydCBkZWZhdWx0IHsgY3JlYXRlRWxlbWVudCwgcmVuZGVyLCBDb21wb25lbnQgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./src/index.js\\n\");\n        /***/\n      },\n\n      /***/\n      \"./src/render.js\":\n      /*!***********************!*\\\n        !*** ./src/render.js ***!\n        \\***********************/\n\n      /*! exports provided: createElement, render, reconcile, createNode, reconcileChildren */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"createElement\\\", function() { return createElement; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"render\\\", function() { return render; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"reconcile\\\", function() { return reconcile; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"createNode\\\", function() { return createNode; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"reconcileChildren\\\", function() { return reconcileChildren; });\\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \\\"./src/constants.js\\\");\\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./component */ \\\"./src/component.js\\\");\\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \\\"./src/utils.js\\\");\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\n\\n\\n // render\\n\\nvar render = function render(element, containerDom) {\\n  reconcile(containerDom, null, element, {});\\n}; // createElement\\n\\n\\nvar createElement = function createElement(type, initProps) {\\n  var _ref;\\n\\n  var props = Object.assign({}, initProps);\\n\\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\\n    args[_key - 2] = arguments[_key];\\n  }\\n\\n  var rawChildren = (_ref = []).concat.apply(_ref, args);\\n\\n  var children = rawChildren.filter(function (child) {\\n    return child != null && typeof child !== 'boolean';\\n  }).map(function (child) {\\n    return child instanceof Object ? child : createTextElement(child);\\n  });\\n  props.children = children;\\n  return {\\n    type: type,\\n    props: props,\\n    children: children\\n  };\\n};\\n\\nvar createTextElement = function createTextElement(text) {\\n  return {\\n    type: _constants__WEBPACK_IMPORTED_MODULE_0__[\\\"TEXT_ELEMENT\\\"],\\n    props: {\\n      nodeValue: text\\n    }\\n  };\\n};\\n\\nvar createNode = function createNode(element, context) {\\n  var type = element.type,\\n      props = element.props;\\n  var isTextElement = type === _constants__WEBPACK_IMPORTED_MODULE_0__[\\\"TEXT_ELEMENT\\\"];\\n  var isComponent = typeof type === 'function';\\n\\n  if (isComponent) {\\n    return Object(_component__WEBPACK_IMPORTED_MODULE_1__[\\\"buildComponent\\\"])(element, context);\\n  }\\n\\n  var dom = isTextElement ? document.createTextNode('') : document.createElement(type);\\n  var childNodes = reconcileChildren({\\n    dom: dom\\n  }, element, context);\\n  updateProperties(dom, {}, props);\\n  return {\\n    dom: dom,\\n    element: element,\\n    childNodes: childNodes\\n  };\\n};\\n\\nvar reconcile = function reconcile(parentDom, oldNode, element, context) {\\n  if (oldNode == null) {\\n    if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(element)) {\\n      var _node = element.map(createNode);\\n\\n      _node.forEach(function (n) {\\n        parentDom.appendChild(n.dom);\\n      });\\n    }\\n\\n    var node = createNode(element, context);\\n\\n    if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(node.dom)) {\\n      var doms = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"flatten\\\"])(node.dom);\\n      doms.forEach(function (dom) {\\n        return parentDom.appendChild(dom);\\n      });\\n    } else if (node.dom) {\\n      parentDom.appendChild(node.dom);\\n    }\\n\\n    return node;\\n  } else if (element == null) {\\n    if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(oldNode)) {\\n      oldNode.forEach(function (n) {\\n        parentDom.removeChild(n.dom);\\n      });\\n    } else if (oldNode.dom) {\\n      parentDom.removeChild(oldNode.dom);\\n    }\\n\\n    return null;\\n  } else if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(oldNode) && Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(element)) {\\n    return reconcileChildren({\\n      dom: parentDom,\\n      childNodes: oldNode\\n    }, {\\n      props: {\\n        children: element\\n      }\\n    }, context);\\n  } else if ((oldNode.element || {}).type !== element.type) {\\n    var _node2 = createNode(element, context);\\n\\n    if (oldNode.element && typeof oldNode.element.type === 'function' && typeof oldNode.instance.componentWillUnmount === 'function') {\\n      oldNode.instance.componentWillUnmount();\\n    }\\n\\n    if (oldNode.dom || oldNode[0].dom) {\\n      parentDom.replaceChild(_node2.dom, oldNode.dom || oldNode[0].dom);\\n    }\\n\\n    return _node2;\\n  } else if (typeof element.type === 'string') {\\n    oldNode.childNodes = reconcileChildren(oldNode, element, context);\\n    updateProperties(oldNode.dom, oldNode.element.props, element.props);\\n    oldNode.element = element;\\n    return oldNode;\\n  } else {\\n    return Object(_component__WEBPACK_IMPORTED_MODULE_1__[\\\"updateComponent\\\"])(_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"SYNC_RENDER\\\"], parentDom, oldNode, element, context, true);\\n  }\\n};\\n\\nvar reconcileChildren = function reconcileChildren(oldNode, element, context) {\\n  var oldChildNodes = oldNode.childNodes || [];\\n  var childElements = element.props.children || [];\\n  var childNodes = [];\\n  var length = Math.max(oldChildNodes.length, childElements.length);\\n\\n  for (var i = 0; i < length; i++) {\\n    var childNode = reconcile(oldNode.dom, oldChildNodes[i], childElements[i], context);\\n    childNodes.push(childNode);\\n  }\\n\\n  return childNodes;\\n};\\n\\nvar updateProperties = function updateProperties(dom, oldProps, props) {\\n  for (name in oldProps) {\\n    if (props[name] == null) {\\n      setAccessor(dom, name, undefined);\\n    }\\n  }\\n\\n  for (name in props) {\\n    // fix: name === 'value' || name === 'checked' ? dom[name] : oldProps[name]\\n    if (props[name] !== oldProps[name]) {\\n      setAccessor(dom, name, props[name]);\\n    }\\n  }\\n};\\n\\nvar setAccessor = function setAccessor(dom, name, value) {\\n  // className htmlFor\\n  if (name === 'className') {\\n    name = 'class';\\n  }\\n\\n  if (name === 'htmlFor') {\\n    name = 'for';\\n  }\\n\\n  if (name === 'key' || name === 'children' || name === 'innerHTML') {// ignore\\n  } else if (name === 'nodeValue') {\\n    dom.nodeValue = value;\\n  } else if (name === 'ref' && value != null) {\\n    if (typeof value === 'function') {\\n      value(dom);\\n    } else {\\n      console.error('ref should be an function');\\n    }\\n  } else if (name === 'style') {\\n    if (_typeof(value) === 'object') {\\n      for (var i in value) {\\n        dom.style[i] = typeof value[i] === 'number' ? \\\"\\\".concat(value[i], \\\"px\\\") : value[i];\\n      }\\n    }\\n\\n    if (typeof value === 'string' || value == null) {\\n      dom.style = value;\\n    }\\n  } else if (name === 'dangerouslySetInnerHTML') {\\n    if (_typeof(value) === 'object') {\\n      dom.innerHTML = value.__html;\\n    }\\n  } else if (name.startsWith('on')) {\\n    var useCapture = name.endsWith('Capture');\\n    var eventType = name.toLowerCase().substring(2);\\n\\n    if (value) {\\n      dom.addEventListener(eventType, eventProxy, useCapture);\\n    } else {\\n      dom.removeEventListener(eventType, eventProxy, useCapture);\\n    }\\n\\n    (dom._listener || (dom._listener = {}))[eventType] = value;\\n  } else {\\n    dom.setAttribute(name, value);\\n  }\\n};\\n\\nfunction eventProxy(e) {\\n  return this._listener[e.type](e);\\n}\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/render.js\\n\");\n        /***/\n      },\n\n      /***/\n      \"./src/utils.js\":\n      /*!**********************!*\\\n        !*** ./src/utils.js ***!\n        \\**********************/\n\n      /*! exports provided: isArray, defer, flatten */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isArray\\\", function() { return isArray; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"defer\\\", function() { return defer; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"flatten\\\", function() { return flatten; });\\nvar isArray = function isArray(array) {\\n  return typeof Array.isArray === 'function' ? Array.isArray(array) : Object.prototype.toString.call(array) === '[object Array]';\\n};\\nvar defer = function defer(func) {\\n  return typeof Promise === 'function' ? Promise.resolve().then(func) : setTimeout(func);\\n};\\nvar flatten = function flatten(array) {\\n  return array.reduce(function (flat, toFlatten) {\\n    return flat.concat(isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\\n  }, []);\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9FUmVhY3QvLi9zcmMvdXRpbHMuanM/MDI1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgaXNBcnJheSA9IGFycmF5ID0+IHR5cGVvZiBBcnJheS5pc0FycmF5ID09PSAnZnVuY3Rpb24nID8gQXJyYXkuaXNBcnJheShhcnJheSkgOiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyYXkpID09PSAnW29iamVjdCBBcnJheV0nO1xuXG5leHBvcnQgY29uc3QgZGVmZXIgPSBmdW5jID0+IHR5cGVvZiBQcm9taXNlID09PSAnZnVuY3Rpb24nID8gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jKSA6IHNldFRpbWVvdXQoZnVuYyk7XG5cbmV4cG9ydCBjb25zdCBmbGF0dGVuID0gYXJyYXkgPT4gYXJyYXkucmVkdWNlKChmbGF0LCB0b0ZsYXR0ZW4pID0+IGZsYXQuY29uY2F0KGlzQXJyYXkodG9GbGF0dGVuKSA/IGZsYXR0ZW4odG9GbGF0dGVuKSA6IHRvRmxhdHRlbiksIFtdKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./src/utils.js\\n\");\n        /***/\n      }\n      /******/\n\n    })\n  );\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXJlYWN0L2Rpc3QvZXJlYWN0LmRldmVsb3BtZW50LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRVJlYWN0RVJlZHV4Ly4vbm9kZV9tb2R1bGVzL2VyZWFjdC9kaXN0L2VyZWFjdC5kZXZlbG9wbWVudC5qcz9kMjZmIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO2Vsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgZGVmaW5lKFtdLCBmYWN0b3J5KTtlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIGV4cG9ydHNbXCJFUmVhY3RcIl0gPSBmYWN0b3J5KCk7ZWxzZSByb290W1wiRVJlYWN0XCJdID0gZmFjdG9yeSgpO1xufSkod2luZG93LCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAoXG4gICAgLyoqKioqKi9cbiAgICBmdW5jdGlvbiAobW9kdWxlcykge1xuICAgICAgLy8gd2VicGFja0Jvb3RzdHJhcFxuXG4gICAgICAvKioqKioqL1xuICAgICAgLy8gVGhlIG1vZHVsZSBjYWNoZVxuXG4gICAgICAvKioqKioqL1xuICAgICAgdmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbiAgICAgIC8qKioqKiovXG5cbiAgICAgIC8qKioqKiovXG4gICAgICAvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuXG4gICAgICAvKioqKioqL1xuXG4gICAgICBmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4gICAgICAgIC8qKioqKiovXG5cbiAgICAgICAgLyoqKioqKi9cbiAgICAgICAgLy8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cbiAgICAgICAgLyoqKioqKi9cbiAgICAgICAgaWYgKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gICAgICAgICAgLyoqKioqKi9cbiAgICAgICAgICByZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiAgICAgICAgICAvKioqKioqL1xuICAgICAgICB9XG4gICAgICAgIC8qKioqKiovXG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cbiAgICAgICAgLyoqKioqKi9cblxuXG4gICAgICAgIHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiAgICAgICAgICAvKioqKioqL1xuICAgICAgICAgIGk6IG1vZHVsZUlkLFxuXG4gICAgICAgICAgLyoqKioqKi9cbiAgICAgICAgICBsOiBmYWxzZSxcblxuICAgICAgICAgIC8qKioqKiovXG4gICAgICAgICAgZXhwb3J0czoge31cbiAgICAgICAgICAvKioqKioqL1xuXG4gICAgICAgIH07XG4gICAgICAgIC8qKioqKiovXG5cbiAgICAgICAgLyoqKioqKi9cbiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cbiAgICAgICAgLyoqKioqKi9cblxuICAgICAgICBtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcbiAgICAgICAgLyoqKioqKi9cblxuICAgICAgICAvKioqKioqL1xuICAgICAgICAvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG5cbiAgICAgICAgLyoqKioqKi9cblxuICAgICAgICBtb2R1bGUubCA9IHRydWU7XG4gICAgICAgIC8qKioqKiovXG5cbiAgICAgICAgLyoqKioqKi9cbiAgICAgICAgLy8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblxuICAgICAgICAvKioqKioqL1xuXG4gICAgICAgIHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiAgICAgICAgLyoqKioqKi9cbiAgICAgIH1cbiAgICAgIC8qKioqKiovXG5cbiAgICAgIC8qKioqKiovXG5cbiAgICAgIC8qKioqKiovXG4gICAgICAvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuXG4gICAgICAvKioqKioqL1xuXG5cbiAgICAgIF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4gICAgICAvKioqKioqL1xuXG4gICAgICAvKioqKioqL1xuICAgICAgLy8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcblxuICAgICAgLyoqKioqKi9cblxuICAgICAgX193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcbiAgICAgIC8qKioqKiovXG5cbiAgICAgIC8qKioqKiovXG4gICAgICAvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcblxuICAgICAgLyoqKioqKi9cblxuICAgICAgX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24gKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuICAgICAgICAvKioqKioqL1xuICAgICAgICBpZiAoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuICAgICAgICAgIC8qKioqKiovXG4gICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBnZXQ6IGdldHRlclxuICAgICAgICAgIH0pO1xuICAgICAgICAgIC8qKioqKiovXG4gICAgICAgIH1cbiAgICAgICAgLyoqKioqKi9cblxuICAgICAgfTtcbiAgICAgIC8qKioqKiovXG5cbiAgICAgIC8qKioqKiovXG4gICAgICAvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5cbiAgICAgIC8qKioqKiovXG5cblxuICAgICAgX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24gKGV4cG9ydHMpIHtcbiAgICAgICAgLyoqKioqKi9cbiAgICAgICAgaWYgKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuICAgICAgICAgIC8qKioqKiovXG4gICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywge1xuICAgICAgICAgICAgdmFsdWU6ICdNb2R1bGUnXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgLyoqKioqKi9cbiAgICAgICAgfVxuICAgICAgICAvKioqKioqL1xuXG5cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywge1xuICAgICAgICAgIHZhbHVlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICAvKioqKioqL1xuICAgICAgfTtcbiAgICAgIC8qKioqKiovXG5cbiAgICAgIC8qKioqKiovXG4gICAgICAvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcblxuICAgICAgLyoqKioqKi9cbiAgICAgIC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuXG4gICAgICAvKioqKioqL1xuICAgICAgLy8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG5cbiAgICAgIC8qKioqKiovXG4gICAgICAvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcblxuICAgICAgLyoqKioqKi9cbiAgICAgIC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcblxuICAgICAgLyoqKioqKi9cblxuXG4gICAgICBfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbiAodmFsdWUsIG1vZGUpIHtcbiAgICAgICAgLyoqKioqKi9cbiAgICAgICAgaWYgKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuICAgICAgICAvKioqKioqL1xuXG4gICAgICAgIGlmIChtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuICAgICAgICAvKioqKioqL1xuXG4gICAgICAgIGlmIChtb2RlICYgNCAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiAgICAgICAgLyoqKioqKi9cblxuICAgICAgICB2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICAvKioqKioqL1xuXG4gICAgICAgIF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gICAgICAgIC8qKioqKiovXG5cblxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0Jywge1xuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgIH0pO1xuICAgICAgICAvKioqKioqL1xuXG4gICAgICAgIGlmIChtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvciAodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWVba2V5XTtcbiAgICAgICAgfS5iaW5kKG51bGwsIGtleSkpO1xuICAgICAgICAvKioqKioqL1xuXG4gICAgICAgIHJldHVybiBucztcbiAgICAgICAgLyoqKioqKi9cbiAgICAgIH07XG4gICAgICAvKioqKioqL1xuXG4gICAgICAvKioqKioqL1xuICAgICAgLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcblxuICAgICAgLyoqKioqKi9cblxuXG4gICAgICBfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbiAobW9kdWxlKSB7XG4gICAgICAgIC8qKioqKiovXG4gICAgICAgIHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuICAgICAgICAvKioqKioqL1xuICAgICAgICBmdW5jdGlvbiBnZXREZWZhdWx0KCkge1xuICAgICAgICAgIHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTtcbiAgICAgICAgfSA6XG4gICAgICAgIC8qKioqKiovXG4gICAgICAgIGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7XG4gICAgICAgICAgcmV0dXJuIG1vZHVsZTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqKioqKi9cblxuICAgICAgICBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gICAgICAgIC8qKioqKiovXG5cblxuICAgICAgICByZXR1cm4gZ2V0dGVyO1xuICAgICAgICAvKioqKioqL1xuICAgICAgfTtcbiAgICAgIC8qKioqKiovXG5cbiAgICAgIC8qKioqKiovXG4gICAgICAvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcblxuICAgICAgLyoqKioqKi9cblxuXG4gICAgICBfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbiAob2JqZWN0LCBwcm9wZXJ0eSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpO1xuICAgICAgfTtcbiAgICAgIC8qKioqKiovXG5cbiAgICAgIC8qKioqKiovXG4gICAgICAvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuXG4gICAgICAvKioqKioqL1xuXG5cbiAgICAgIF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL3N0YXRpY1wiO1xuICAgICAgLyoqKioqKi9cblxuICAgICAgLyoqKioqKi9cblxuICAgICAgLyoqKioqKi9cbiAgICAgIC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuXG4gICAgICAvKioqKioqL1xuXG4gICAgICByZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc3JjL2luZGV4LmpzXCIpO1xuICAgICAgLyoqKioqKi9cbiAgICB9KFxuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgICAvKioqKioqL1xuICAgIHtcbiAgICAgIC8qKiovXG4gICAgICBcIi4vc3JjL2NvbXBvbmVudC5qc1wiOlxuICAgICAgLyohKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICAgICAgICEqKiogLi9zcmMvY29tcG9uZW50LmpzICoqKiFcbiAgICAgICAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICAgICAgLyohIGV4cG9ydHMgcHJvdmlkZWQ6IENvbXBvbmVudCwgYnVpbGRDb21wb25lbnQsIHVwZGF0ZUNvbXBvbmVudCAqL1xuXG4gICAgICAvKioqL1xuICAgICAgZnVuY3Rpb24gKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICAgICBldmFsKFwiX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXFxcIkNvbXBvbmVudFxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gQ29tcG9uZW50OyB9KTtcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXCJidWlsZENvbXBvbmVudFxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gYnVpbGRDb21wb25lbnQ7IH0pO1xcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXFxcInVwZGF0ZUNvbXBvbmVudFxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gdXBkYXRlQ29tcG9uZW50OyB9KTtcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NvbnN0YW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb25zdGFudHMgKi8gXFxcIi4vc3JjL2NvbnN0YW50cy5qc1xcXCIpO1xcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfcmVuZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3JlbmRlciAqLyBcXFwiLi9zcmMvcmVuZGVyLmpzXFxcIik7XFxuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlscyAqLyBcXFwiLi9zcmMvdXRpbHMuanNcXFwiKTtcXG5cXG5cXG5cXG52YXIgd2lsbFJlbmRlclF1ZXVlID0gW107XFxuXFxuZnVuY3Rpb24gQ29tcG9uZW50KHByb3BzLCBjb250ZXh0KSB7XFxuICB0aGlzLl9kaXJ0eSA9IGZhbHNlO1xcbiAgdGhpcy5wcm9wcyA9IHByb3BzIHx8IHt9O1xcbiAgdGhpcy5jb250ZXh0ID0gY29udGV4dCB8fCB7fTtcXG4gIHRoaXMuX3JlbmRlckNhbGxiYWNrcyA9IFtdO1xcbn1cXG5cXG5PYmplY3QuYXNzaWduKENvbXBvbmVudC5wcm90b3R5cGUsIHtcXG4gIHNldFN0YXRlOiBmdW5jdGlvbiBzZXRTdGF0ZShzdGF0ZSwgY2FsbGJhY2spIHtcXG4gICAgaWYgKCF0aGlzLnByZXZTdGF0ZSkge1xcbiAgICAgIHRoaXMucHJldlN0YXRlID0gdGhpcy5zdGF0ZTtcXG4gICAgfVxcblxcbiAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zdGF0ZSwgc3RhdGUpO1xcblxcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XFxuICAgICAgdGhpcy5fcmVuZGVyQ2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xcbiAgICB9XFxuXFxuICAgIHZhciBvbGROb2RlID0gdGhpc1tfY29uc3RhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcIklOVEVSTkFMX05PREVcXFwiXV07XFxuICAgIHZhciBkb20gPSBvbGROb2RlLmRvbSxcXG4gICAgICAgIGVsZW1lbnQgPSBvbGROb2RlLmVsZW1lbnQ7XFxuICAgIHZhciBwYXJlbnREb20gPSBPYmplY3QoX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bXFxcImlzQXJyYXlcXFwiXSkoZG9tKSA/IGRvbVswXS5wYXJlbnROb2RlIDogZG9tLnBhcmVudE5vZGU7XFxuICAgIHVwZGF0ZUNvbXBvbmVudChfY29uc3RhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcIkFTWU5DX1JFTkRFUlxcXCJdLCBwYXJlbnREb20sIG9sZE5vZGUsIGVsZW1lbnQpO1xcbiAgfSxcXG4gIGZvcmNlVXBkYXRlOiBmdW5jdGlvbiBmb3JjZVVwZGF0ZShjYWxsYmFjaykge1xcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XFxuICAgICAgdGhpcy5fcmVuZGVyQ2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xcbiAgICB9XFxuXFxuICAgIHZhciBvbGROb2RlID0gdGhpc1tfY29uc3RhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcIklOVEVSTkFMX05PREVcXFwiXV07XFxuICAgIHZhciBkb20gPSBvbGROb2RlLmRvbSxcXG4gICAgICAgIGVsZW1lbnQgPSBvbGROb2RlLmVsZW1lbnQ7XFxuICAgIHZhciBwYXJlbnREb20gPSBPYmplY3QoX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bXFxcImlzQXJyYXlcXFwiXSkoZG9tKSA/IGRvbVswXS5wYXJlbnROb2RlIDogZG9tLnBhcmVudE5vZGU7XFxuICAgIHVwZGF0ZUNvbXBvbmVudChfY29uc3RhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcIkZPUkNFX1JFTkRFUlxcXCJdLCBwYXJlbnREb20sIG9sZE5vZGUsIGVsZW1lbnQpO1xcbiAgfSxcXG4gIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKCkge31cXG59KTtcXG5cXG52YXIgYnVpbGRDb21wb25lbnQgPSBmdW5jdGlvbiBidWlsZENvbXBvbmVudChlbGVtZW50LCBjb250ZXh0KSB7XFxuICB2YXIgdHlwZSA9IGVsZW1lbnQudHlwZSxcXG4gICAgICBwcm9wcyA9IGVsZW1lbnQucHJvcHM7XFxuICB2YXIgaW5zdGFuY2UgPSBudWxsO1xcbiAgaW5zdGFuY2UgPSBjcmVhdGVDb21wb25lbnQodHlwZSwgcHJvcHMsIGNvbnRleHQpO1xcbiAgc2V0Q29tcG9uZW50UHJvcHMoaW5zdGFuY2UsIHByb3BzKTtcXG4gIGluc3RhbmNlW19jb25zdGFudHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1tcXFwiSU5URVJOQUxfTk9ERVxcXCJdXSA9IGluc3RhbmNlW19jb25zdGFudHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1tcXFwiSU5URVJOQUxfTk9ERVxcXCJdXSB8fCB7XFxuICAgIGVsZW1lbnQ6IGVsZW1lbnRcXG4gIH07XFxuICByZW5kZXJDb21wb25lbnQoaW5zdGFuY2UsIGNvbnRleHQpO1xcbiAgcmV0dXJuIGluc3RhbmNlW19jb25zdGFudHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1tcXFwiSU5URVJOQUxfTk9ERVxcXCJdXTtcXG59O1xcblxcbnZhciB1cGRhdGVDb21wb25lbnQgPSBmdW5jdGlvbiB1cGRhdGVDb21wb25lbnQocmVuZGVyTW9kZSwgcGFyZW50RG9tLCBvbGROb2RlLCBlbGVtZW50LCBjb250ZXh0LCBpc1JlY2VpdmVQcm9wcykge1xcbiAgdmFyIGluc3RhbmNlID0gb2xkTm9kZS5pbnN0YW5jZTtcXG5cXG4gIGlmIChpc1JlY2VpdmVQcm9wcykge1xcbiAgICBzZXRDb21wb25lbnRQcm9wcyhpbnN0YW5jZSwgZWxlbWVudC5wcm9wcyk7XFxuICB9XFxuXFxuICB2YXIgcHJvcHMgPSBpbnN0YW5jZS5wcm9wcztcXG4gIHZhciBzdGF0ZSA9IGluc3RhbmNlLnN0YXRlO1xcbiAgdmFyIHByZXZQcm9wcyA9IGluc3RhbmNlLnByZXZQcm9wcyB8fCBwcm9wcztcXG4gIHZhciBwcmV2U3RhdGUgPSBpbnN0YW5jZS5wcmV2U3RhdGUgfHwgc3RhdGU7XFxuICB2YXIgcHJldkNvbnRleHQgPSBpbnN0YW5jZS5wcmV2Q29udGV4dCB8fCBjb250ZXh0O1xcbiAgdmFyIHNraXBSZW5kZXIgPSBmYWxzZTtcXG5cXG4gIGlmIChyZW5kZXJNb2RlID09PSBfY29uc3RhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcIkFTWU5DX1JFTkRFUlxcXCJdKSB7XFxuICAgIGlmICghaW5zdGFuY2UuX2RpcnR5ICYmIHdpbGxSZW5kZXJRdWV1ZS5wdXNoKHtcXG4gICAgICBpbnN0YW5jZTogaW5zdGFuY2UsXFxuICAgICAgcGFyZW50RG9tOiBwYXJlbnREb20sXFxuICAgICAgb2xkTm9kZTogb2xkTm9kZSxcXG4gICAgICBlbGVtZW50OiBlbGVtZW50LFxcbiAgICAgIGNvbnRleHQ6IGNvbnRleHRcXG4gICAgfSkgPT09IDEpIHtcXG4gICAgICAvLyBvbmx5IGZpcnN0IHRpbWVcXG4gICAgICBpbnN0YW5jZS5fZGlydHkgPSB0cnVlO1xcbiAgICAgIE9iamVjdChfdXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1tcXFwiZGVmZXJcXFwiXSkoZnVuY3Rpb24gKCkge1xcbiAgICAgICAgdmFyIF93aWxsUmVuZGVyUXVldWUkcG9wID0gd2lsbFJlbmRlclF1ZXVlLnBvcCgpLFxcbiAgICAgICAgICAgIG5leHRJbnN0YW5jZSA9IF93aWxsUmVuZGVyUXVldWUkcG9wLmluc3RhbmNlLFxcbiAgICAgICAgICAgIG5leHRQYXJlbnREb20gPSBfd2lsbFJlbmRlclF1ZXVlJHBvcC5wYXJlbnREb20sXFxuICAgICAgICAgICAgbmV4dE9sZE5vZGUgPSBfd2lsbFJlbmRlclF1ZXVlJHBvcC5vbGROb2RlLFxcbiAgICAgICAgICAgIG5leHRFbGVtZW50ID0gX3dpbGxSZW5kZXJRdWV1ZSRwb3AuZWxlbWVudCxcXG4gICAgICAgICAgICBuZXh0Q29udGV4dCA9IF93aWxsUmVuZGVyUXVldWUkcG9wLmNvbnRleHQ7XFxuXFxuICAgICAgICBpZiAobmV4dEluc3RhbmNlLl9kaXJ0eSkge1xcbiAgICAgICAgICB1cGRhdGVDb21wb25lbnQoX2NvbnN0YW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fW1xcXCJTWU5DX1JFTkRFUlxcXCJdLCBuZXh0UGFyZW50RG9tLCBuZXh0T2xkTm9kZSwgbmV4dEVsZW1lbnQsIG5leHRDb250ZXh0KTtcXG4gICAgICAgIH1cXG4gICAgICB9KTtcXG4gICAgfVxcblxcbiAgICByZXR1cm47XFxuICB9XFxuXFxuICBpbnN0YW5jZS5fZGlydHkgPSBmYWxzZTtcXG4gIGluc3RhbmNlLnByb3BzID0gcHJldlByb3BzO1xcbiAgaW5zdGFuY2Uuc3RhdGUgPSBwcmV2U3RhdGU7XFxuICBpbnN0YW5jZS5jb250ZXh0ID0gcHJldkNvbnRleHQ7XFxuXFxuICBpZiAocmVuZGVyTW9kZSAhPT0gX2NvbnN0YW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fW1xcXCJGT1JDRV9SRU5ERVJcXFwiXSAmJiB0eXBlb2YgaW5zdGFuY2Uuc2hvdWxkQ29tcG9uZW50VXBkYXRlID09PSAnZnVuY3Rpb24nICYmIGluc3RhbmNlLnNob3VsZENvbXBvbmVudFVwZGF0ZShwcm9wcywgc3RhdGUpID09PSBmYWxzZSkge1xcbiAgICBza2lwUmVuZGVyID0gdHJ1ZTtcXG4gIH0gZWxzZSBpZiAodHlwZW9mIGluc3RhbmNlLmNvbXBvbmVudFdpbGxVcGRhdGUgPT09ICdmdW5jdGlvbicpIHtcXG4gICAgaW5zdGFuY2UuY29tcG9uZW50V2lsbFVwZGF0ZShwcm9wcywgc3RhdGUpO1xcbiAgfVxcblxcbiAgaW5zdGFuY2UucHJvcHMgPSBwcm9wcztcXG4gIGluc3RhbmNlLnN0YXRlID0gc3RhdGU7XFxuICBpbnN0YW5jZS5jb250ZXh0ID0gY29udGV4dDtcXG4gIGluc3RhbmNlLnByZXZQcm9wcyA9IGluc3RhbmNlLnByZXZTdGF0ZSA9IGluc3RhbmNlLnByZXZDb250ZXh0ID0gbnVsbDtcXG5cXG4gIGlmICghc2tpcFJlbmRlcikge1xcbiAgICBpZiAodHlwZW9mIGluc3RhbmNlLmdldENoaWxkQ29udGV4dCA9PT0gJ2Z1bmN0aW9uJykge1xcbiAgICAgIGNvbnRleHQgPSBPYmplY3QuYXNzaWduKHt9LCBjb250ZXh0LCBpbnN0YW5jZS5nZXRDaGlsZENvbnRleHQoKSk7XFxuICAgIH1cXG5cXG4gICAgdmFyIGNoaWxkRWxlbWVudCA9IGluc3RhbmNlLnJlbmRlcigpO1xcbiAgICB2YXIgb2xkQ2hpbGROb2RlID0gb2xkTm9kZS5jaGlsZE5vZGU7XFxuICAgIHZhciBjaGlsZE5vZGUgPSBPYmplY3QoX3JlbmRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fW1xcXCJyZWNvbmNpbGVcXFwiXSkocGFyZW50RG9tLCBvbGRDaGlsZE5vZGUsIGNoaWxkRWxlbWVudCwgY29udGV4dCk7XFxuICAgIHZhciBkb20gPSBPYmplY3QoX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bXFxcImlzQXJyYXlcXFwiXSkoY2hpbGROb2RlKSA/IGNoaWxkTm9kZS5tYXAoZnVuY3Rpb24gKG4pIHtcXG4gICAgICByZXR1cm4gbi5kb207XFxuICAgIH0pIDogY2hpbGROb2RlLmRvbTtcXG4gICAgT2JqZWN0LmFzc2lnbihvbGROb2RlLCB7XFxuICAgICAgZG9tOiBkb20sXFxuICAgICAgY2hpbGROb2RlOiBjaGlsZE5vZGUsXFxuICAgICAgZWxlbWVudDogZWxlbWVudFxcbiAgICB9KTtcXG5cXG4gICAgaWYgKHR5cGVvZiBpbnN0YW5jZS5jb21wb25lbnREaWRVcGRhdGUgPT09ICdmdW5jdGlvbicpIHtcXG4gICAgICBpbnN0YW5jZS5jb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUpO1xcbiAgICB9XFxuXFxuICAgIHdoaWxlIChpbnN0YW5jZS5fcmVuZGVyQ2FsbGJhY2tzLmxlbmd0aCkge1xcbiAgICAgIGluc3RhbmNlLl9yZW5kZXJDYWxsYmFja3MucG9wKCkuY2FsbChpbnN0YW5jZSk7XFxuICAgIH1cXG4gIH1cXG5cXG4gIHJldHVybiBvbGROb2RlO1xcbn07XFxuXFxudmFyIGNyZWF0ZUNvbXBvbmVudCA9IGZ1bmN0aW9uIGNyZWF0ZUNvbXBvbmVudChDb25zdHJ1Y3RvciwgcHJvcHMsIGNvbnRleHQpIHtcXG4gIHZhciBpbnN0YW5jZTtcXG5cXG4gIGlmICghKENvbnN0cnVjdG9yLnByb3RvdHlwZSAmJiBDb25zdHJ1Y3Rvci5wcm90b3R5cGUucmVuZGVyKSkge1xcbiAgICB2YXIgcmVuZGVyID0gQ29uc3RydWN0b3I7XFxuXFxuICAgIENvbnN0cnVjdG9yID0gZnVuY3Rpb24gQ29uc3RydWN0b3IocHJvcHMsIGNvbnRleHQpIHtcXG4gICAgICBDb21wb25lbnQucHJvdG90eXBlLmNvbnN0cnVjdG9yLmJpbmQodGhpcywgcHJvcHMsIGNvbnRleHQpO1xcbiAgICB9O1xcblxcbiAgICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBDb21wb25lbnQucHJvdG90eXBlO1xcblxcbiAgICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKCkge1xcbiAgICAgIHJldHVybiByZW5kZXIodGhpcy5wcm9wcyk7XFxuICAgIH07XFxuICB9XFxuXFxuICBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3Rvcihwcm9wcywgY29udGV4dCk7XFxuICBDb21wb25lbnQuY2FsbChpbnN0YW5jZSwgcHJvcHMsIGNvbnRleHQpO1xcbiAgaW5zdGFuY2UuY29uc3RydWN0b3IgPSBDb25zdHJ1Y3RvcjtcXG4gIHJldHVybiBpbnN0YW5jZTtcXG59O1xcblxcbnZhciBzZXRDb21wb25lbnRQcm9wcyA9IGZ1bmN0aW9uIHNldENvbXBvbmVudFByb3BzKGluc3RhbmNlLCBwcm9wcykge1xcbiAgdmFyIGlzVXBkYXRlID0gISFpbnN0YW5jZVtfY29uc3RhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcIklOVEVSTkFMX05PREVcXFwiXV07XFxuXFxuICBpZiAoaXNVcGRhdGUgJiYgdHlwZW9mIGluc3RhbmNlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPT09ICdmdW5jdGlvbicpIHtcXG4gICAgaW5zdGFuY2UuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhwcm9wcyk7XFxuICB9IGVsc2UgaWYgKCFpc1VwZGF0ZSAmJiB0eXBlb2YgaW5zdGFuY2UuY29tcG9uZW50V2lsbE1vdW50ID09PSAnZnVuY3Rpb24nKSB7XFxuICAgIGluc3RhbmNlLmNvbXBvbmVudFdpbGxNb3VudCgpO1xcbiAgfVxcblxcbiAgaWYgKCFpbnN0YW5jZS5wcmV2UHJvcHMpIGluc3RhbmNlLnByZXZQcm9wcyA9IGluc3RhbmNlLnByb3BzO1xcbiAgaWYgKCFpbnN0YW5jZS5wcmV2Q29udGV4dCkgaW5zdGFuY2UucHJldkNvbnRleHQgPSBpbnN0YW5jZS5jb250ZXh0O1xcbiAgaW5zdGFuY2UucHJvcHMgPSBwcm9wcztcXG59O1xcblxcbnZhciByZW5kZXJDb21wb25lbnQgPSBmdW5jdGlvbiByZW5kZXJDb21wb25lbnQoaW5zdGFuY2UsIGNvbnRleHQpIHtcXG4gIGluc3RhbmNlLnByZXZQcm9wcyA9IGluc3RhbmNlLnByZXZTdGF0ZSA9IGluc3RhbmNlLnByZXZDb250ZXh0ID0gbnVsbDtcXG5cXG4gIGlmICh0eXBlb2YgaW5zdGFuY2UuZ2V0Q2hpbGRDb250ZXh0ID09PSAnZnVuY3Rpb24nKSB7XFxuICAgIGNvbnRleHQgPSBPYmplY3QuYXNzaWduKHt9LCBjb250ZXh0LCBpbnN0YW5jZS5nZXRDaGlsZENvbnRleHQoKSk7XFxuICB9XFxuXFxuICB2YXIgY2hpbGRFbGVtZW50ID0gaW5zdGFuY2UucmVuZGVyKCk7XFxuICB2YXIgY2hpbGROb2RlID0gbnVsbDtcXG4gIHZhciBkb20gPSBudWxsO1xcblxcbiAgaWYgKE9iamVjdChfdXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1tcXFwiaXNBcnJheVxcXCJdKShjaGlsZEVsZW1lbnQpKSB7XFxuICAgIGNoaWxkTm9kZSA9IGNoaWxkRWxlbWVudC5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHtcXG4gICAgICByZXR1cm4gT2JqZWN0KF9yZW5kZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1tcXFwiY3JlYXRlTm9kZVxcXCJdKShlbGVtZW50LCBjb250ZXh0KTtcXG4gICAgfSk7XFxuICAgIGRvbSA9IGNoaWxkTm9kZS5tYXAoZnVuY3Rpb24gKG4pIHtcXG4gICAgICByZXR1cm4gbi5kb207XFxuICAgIH0pO1xcbiAgfSBlbHNlIHtcXG4gICAgY2hpbGROb2RlID0gT2JqZWN0KF9yZW5kZXJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1tcXFwiY3JlYXRlTm9kZVxcXCJdKShjaGlsZEVsZW1lbnQsIGNvbnRleHQpO1xcbiAgICBkb20gPSBjaGlsZE5vZGUuZG9tO1xcbiAgfVxcblxcbiAgT2JqZWN0LmFzc2lnbihpbnN0YW5jZVtfY29uc3RhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcIklOVEVSTkFMX05PREVcXFwiXV0sIHtcXG4gICAgZG9tOiBkb20sXFxuICAgIGNoaWxkTm9kZTogY2hpbGROb2RlLFxcbiAgICBpbnN0YW5jZTogaW5zdGFuY2VcXG4gIH0pO1xcblxcbiAgaWYgKHR5cGVvZiBpbnN0YW5jZS5jb21wb25lbnREaWRNb3VudCA9PT0gJ2Z1bmN0aW9uJykge1xcbiAgICBpbnN0YW5jZS5jb21wb25lbnREaWRNb3VudCgpO1xcbiAgfVxcblxcbiAgd2hpbGUgKGluc3RhbmNlLl9yZW5kZXJDYWxsYmFja3MubGVuZ3RoKSB7XFxuICAgIGluc3RhbmNlLl9yZW5kZXJDYWxsYmFja3MucG9wKCkuY2FsbChpbnN0YW5jZSk7XFxuICB9XFxufTtcXG5cXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl6Y21NdlkyOXRjRzl1Wlc1MExtcHpMbXB6SWl3aWMyOTFjbU5sY3lJNld5SjNaV0p3WVdOck9pOHZSVkpsWVdOMEx5NHZjM0pqTDJOdmJYQnZibVZ1ZEM1cWN6OWhNamt3SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltbHRjRzl5ZENCN0lFbE9WRVZTVGtGTVgwNVBSRVVzSUVaUFVrTkZYMUpGVGtSRlVpd2dRVk5aVGtOZlVrVk9SRVZTTENCVFdVNURYMUpGVGtSRlVpQjlJR1p5YjIwZ0p5NHZZMjl1YzNSaGJuUnpKenRjYm1sdGNHOXlkQ0I3SUhKbFkyOXVZMmxzWlN3Z1kzSmxZWFJsVG05a1pTQjlJR1p5YjIwZ0p5NHZjbVZ1WkdWeUp6dGNibWx0Y0c5eWRDQjdJR2x6UVhKeVlYa3NJR1JsWm1WeUlIMGdabkp2YlNBbkxpOTFkR2xzY3ljN1hHNWNibU52Ym5OMElIZHBiR3hTWlc1a1pYSlJkV1YxWlNBOUlGdGRPMXh1WEc1bWRXNWpkR2x2YmlCRGIyMXdiMjVsYm5RZ0tIQnliM0J6TENCamIyNTBaWGgwS1NCN1hHNGdJSFJvYVhNdVgyUnBjblI1SUQwZ1ptRnNjMlU3WEc1Y2JpQWdkR2hwY3k1d2NtOXdjeUE5SUhCeWIzQnpJSHg4SUh0OU8xeHVJQ0IwYUdsekxtTnZiblJsZUhRZ1BTQmpiMjUwWlhoMElIeDhJSHQ5TzF4dVhHNGdJSFJvYVhNdVgzSmxibVJsY2tOaGJHeGlZV05yY3lBOUlGdGRYRzU5WEc1Y2JrOWlhbVZqZEM1aGMzTnBaMjRvUTI5dGNHOXVaVzUwTG5CeWIzUnZkSGx3WlN3Z2UxeHVJQ0J6WlhSVGRHRjBaU2h6ZEdGMFpTd2dZMkZzYkdKaFkyc3BJSHRjYmlBZ0lDQnBaaUFvSVhSb2FYTXVjSEpsZGxOMFlYUmxLU0I3WEc0Z0lDQWdJQ0IwYUdsekxuQnlaWFpUZEdGMFpTQTlJSFJvYVhNdWMzUmhkR1U3WEc0Z0lDQWdmVnh1SUNBZ0lIUm9hWE11YzNSaGRHVWdQU0JQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0IwYUdsekxuTjBZWFJsTENCemRHRjBaU2s3WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJqWVd4c1ltRmpheUE5UFQwZ0oyWjFibU4wYVc5dUp5a2dlMXh1SUNBZ0lDQWdkR2hwY3k1ZmNtVnVaR1Z5UTJGc2JHSmhZMnR6TG5CMWMyZ29ZMkZzYkdKaFkyc3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUc5c1pFNXZaR1VnUFNCMGFHbHpXMGxPVkVWU1RrRk1YMDVQUkVWZE8xeHVJQ0FnSUdOdmJuTjBJSHNnWkc5dExDQmxiR1Z0Wlc1MElIMGdQU0J2YkdST2IyUmxPMXh1SUNBZ0lHTnZibk4wSUhCaGNtVnVkRVJ2YlNBOUlHbHpRWEp5WVhrb1pHOXRLU0EvSUdSdmJWc3dYUzV3WVhKbGJuUk9iMlJsSURvZ1pHOXRMbkJoY21WdWRFNXZaR1U3WEc1Y2JpQWdJQ0IxY0dSaGRHVkRiMjF3YjI1bGJuUW9RVk5aVGtOZlVrVk9SRVZTTENCd1lYSmxiblJFYjIwc0lHOXNaRTV2WkdVc0lHVnNaVzFsYm5RcE8xeHVJQ0I5TEZ4dVhHNGdJR1p2Y21ObFZYQmtZWFJsS0dOaGJHeGlZV05yS1NCN1hHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCallXeHNZbUZqYXlBOVBUMGdKMloxYm1OMGFXOXVKeWtnZTF4dUlDQWdJQ0FnZEdocGN5NWZjbVZ1WkdWeVEyRnNiR0poWTJ0ekxuQjFjMmdvWTJGc2JHSmhZMnNwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR052Ym5OMElHOXNaRTV2WkdVZ1BTQjBhR2x6VzBsT1ZFVlNUa0ZNWDA1UFJFVmRPMXh1SUNBZ0lHTnZibk4wSUhzZ1pHOXRMQ0JsYkdWdFpXNTBJSDBnUFNCdmJHUk9iMlJsTzF4dUlDQWdJR052Ym5OMElIQmhjbVZ1ZEVSdmJTQTlJR2x6UVhKeVlYa29aRzl0S1NBL0lHUnZiVnN3WFM1d1lYSmxiblJPYjJSbElEb2daRzl0TG5CaGNtVnVkRTV2WkdVN1hHNGdJQ0FnZFhCa1lYUmxRMjl0Y0c5dVpXNTBLRVpQVWtORlgxSkZUa1JGVWl3Z2NHRnlaVzUwUkc5dExDQnZiR1JPYjJSbExDQmxiR1Z0Wlc1MEtUdGNiaUFnZlN4Y2JseHVJQ0J5Wlc1a1pYSW9LU0I3ZlZ4dWZTazdYRzVjYm1OdmJuTjBJR0oxYVd4a1EyOXRjRzl1Wlc1MElEMGdLR1ZzWlcxbGJuUXNJR052Ym5SbGVIUXBJRDArSUh0Y2JpQWdZMjl1YzNRZ2V5QjBlWEJsTENCd2NtOXdjeUI5SUQwZ1pXeGxiV1Z1ZER0Y2JpQWdiR1YwSUdsdWMzUmhibU5sSUQwZ2JuVnNiRHRjYmx4dUlDQnBibk4wWVc1alpTQTlJR055WldGMFpVTnZiWEJ2Ym1WdWRDaDBlWEJsTENCd2NtOXdjeXdnWTI5dWRHVjRkQ2s3WEc0Z0lITmxkRU52YlhCdmJtVnVkRkJ5YjNCektHbHVjM1JoYm1ObExDQndjbTl3Y3lrN1hHNWNiaUFnYVc1emRHRnVZMlZiU1U1VVJWSk9RVXhmVGs5RVJWMGdQU0JwYm5OMFlXNWpaVnRKVGxSRlVrNUJURjlPVDBSRlhTQjhmQ0I3SUdWc1pXMWxiblFnZlR0Y2JpQWdjbVZ1WkdWeVEyOXRjRzl1Wlc1MEtHbHVjM1JoYm1ObExDQmpiMjUwWlhoMEtWeHVYRzRnSUhKbGRIVnliaUJwYm5OMFlXNWpaVnRKVGxSRlVrNUJURjlPVDBSRlhUdGNibjFjYmx4dVkyOXVjM1FnZFhCa1lYUmxRMjl0Y0c5dVpXNTBJRDBnS0hKbGJtUmxjazF2WkdVc0lIQmhjbVZ1ZEVSdmJTd2diMnhrVG05a1pTd2daV3hsYldWdWRDd2dZMjl1ZEdWNGRDd2dhWE5TWldObGFYWmxVSEp2Y0hNcElEMCtJSHRjYmlBZ1kyOXVjM1FnYVc1emRHRnVZMlVnUFNCdmJHUk9iMlJsTG1sdWMzUmhibU5sTzF4dUlDQnBaaUFvYVhOU1pXTmxhWFpsVUhKdmNITXBJSHRjYmlBZ0lDQnpaWFJEYjIxd2IyNWxiblJRY205d2N5aHBibk4wWVc1alpTd2daV3hsYldWdWRDNXdjbTl3Y3lrN1hHNGdJSDFjYmx4dUlDQmpiMjV6ZENCd2NtOXdjeUE5SUdsdWMzUmhibU5sTG5CeWIzQnpPMXh1SUNCamIyNXpkQ0J6ZEdGMFpTQTlJR2x1YzNSaGJtTmxMbk4wWVhSbE8xeHVJQ0JqYjI1emRDQndjbVYyVUhKdmNITWdQU0JwYm5OMFlXNWpaUzV3Y21WMlVISnZjSE1nZkh3Z2NISnZjSE03WEc0Z0lHTnZibk4wSUhCeVpYWlRkR0YwWlNBOUlHbHVjM1JoYm1ObExuQnlaWFpUZEdGMFpTQjhmQ0J6ZEdGMFpUdGNiaUFnWTI5dWMzUWdjSEpsZGtOdmJuUmxlSFFnUFNCcGJuTjBZVzVqWlM1d2NtVjJRMjl1ZEdWNGRDQjhmQ0JqYjI1MFpYaDBPMXh1SUNCc1pYUWdjMnRwY0ZKbGJtUmxjaUE5SUdaaGJITmxPMXh1WEc0Z0lHbG1JQ2h5Wlc1a1pYSk5iMlJsSUQwOVBTQkJVMWxPUTE5U1JVNUVSVklwSUh0Y2JpQWdJQ0JwWmlBb0lXbHVjM1JoYm1ObExsOWthWEowZVNBbUppQjNhV3hzVW1WdVpHVnlVWFZsZFdVdWNIVnphQ2g3SUdsdWMzUmhibU5sTENCd1lYSmxiblJFYjIwc0lHOXNaRTV2WkdVc0lHVnNaVzFsYm5Rc0lHTnZiblJsZUhRZ2ZTa2dQVDA5SURFcElIdGNiaUFnSUNBZ0lDOHZJRzl1YkhrZ1ptbHljM1FnZEdsdFpWeHVJQ0FnSUNBZ2FXNXpkR0Z1WTJVdVgyUnBjblI1SUQwZ2RISjFaVHRjYmx4dUlDQWdJQ0FnWkdWbVpYSW9LQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCN1hHNGdJQ0FnSUNBZ0lDQWdhVzV6ZEdGdVkyVTZJRzVsZUhSSmJuTjBZVzVqWlN4Y2JpQWdJQ0FnSUNBZ0lDQndZWEpsYm5SRWIyMDZJRzVsZUhSUVlYSmxiblJFYjIwc1hHNGdJQ0FnSUNBZ0lDQWdiMnhrVG05a1pUb2dibVY0ZEU5c1pFNXZaR1VzWEc0Z0lDQWdJQ0FnSUNBZ1pXeGxiV1Z1ZERvZ2JtVjRkRVZzWlcxbGJuUXNYRzRnSUNBZ0lDQWdJQ0FnWTI5dWRHVjRkRG9nYm1WNGRFTnZiblJsZUhRc1hHNGdJQ0FnSUNBZ0lIMGdQU0IzYVd4c1VtVnVaR1Z5VVhWbGRXVXVjRzl3S0NrN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0c1bGVIUkpibk4wWVc1alpTNWZaR2x5ZEhrcElIdGNiaUFnSUNBZ0lDQWdJQ0IxY0dSaGRHVkRiMjF3YjI1bGJuUW9VMWxPUTE5U1JVNUVSVklzSUc1bGVIUlFZWEpsYm5SRWIyMHNJRzVsZUhSUGJHUk9iMlJsTENCdVpYaDBSV3hsYldWdWRDd2dibVY0ZEVOdmJuUmxlSFFwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNGdJQ0FnY21WMGRYSnVPMXh1SUNCOVhHNWNiaUFnYVc1emRHRnVZMlV1WDJScGNuUjVJRDBnWm1Gc2MyVTdYRzVjYmlBZ2FXNXpkR0Z1WTJVdWNISnZjSE1nUFNCd2NtVjJVSEp2Y0hNN1hHNGdJR2x1YzNSaGJtTmxMbk4wWVhSbElEMGdjSEpsZGxOMFlYUmxPMXh1SUNCcGJuTjBZVzVqWlM1amIyNTBaWGgwSUQwZ2NISmxka052Ym5SbGVIUTdYRzVjYmlBZ2FXWWdLSEpsYm1SbGNrMXZaR1VnSVQwOUlFWlBVa05GWDFKRlRrUkZVaUFtSmlCMGVYQmxiMllnYVc1emRHRnVZMlV1YzJodmRXeGtRMjl0Y0c5dVpXNTBWWEJrWVhSbElEMDlQU0FuWm5WdVkzUnBiMjRuSUNZbUlHbHVjM1JoYm1ObExuTm9iM1ZzWkVOdmJYQnZibVZ1ZEZWd1pHRjBaU2h3Y205d2N5d2djM1JoZEdVcElEMDlQU0JtWVd4elpTa2dlMXh1SUNBZ0lITnJhWEJTWlc1a1pYSWdQU0IwY25WbE8xeHVJQ0I5SUdWc2MyVWdhV1lnS0hSNWNHVnZaaUJwYm5OMFlXNWpaUzVqYjIxd2IyNWxiblJYYVd4c1ZYQmtZWFJsSUQwOVBTQW5ablZ1WTNScGIyNG5LU0I3WEc0Z0lDQWdhVzV6ZEdGdVkyVXVZMjl0Y0c5dVpXNTBWMmxzYkZWd1pHRjBaU2h3Y205d2N5d2djM1JoZEdVcE8xeHVJQ0I5WEc1Y2JpQWdhVzV6ZEdGdVkyVXVjSEp2Y0hNZ1BTQndjbTl3Y3p0Y2JpQWdhVzV6ZEdGdVkyVXVjM1JoZEdVZ1BTQnpkR0YwWlR0Y2JpQWdhVzV6ZEdGdVkyVXVZMjl1ZEdWNGRDQTlJR052Ym5SbGVIUTdYRzVjYmlBZ2FXNXpkR0Z1WTJVdWNISmxkbEJ5YjNCeklEMGdhVzV6ZEdGdVkyVXVjSEpsZGxOMFlYUmxJRDBnYVc1emRHRnVZMlV1Y0hKbGRrTnZiblJsZUhRZ1BTQnVkV3hzTzF4dVhHNGdJR2xtSUNnaGMydHBjRkpsYm1SbGNpa2dlMXh1WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJwYm5OMFlXNWpaUzVuWlhSRGFHbHNaRU52Ym5SbGVIUWdQVDA5SUNkbWRXNWpkR2x2YmljcElIdGNiaUFnSUNBZ0lHTnZiblJsZUhRZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmpiMjUwWlhoMExDQnBibk4wWVc1alpTNW5aWFJEYUdsc1pFTnZiblJsZUhRb0tTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnWTJocGJHUkZiR1Z0Wlc1MElEMGdhVzV6ZEdGdVkyVXVjbVZ1WkdWeUtDazdYRzRnSUNBZ1kyOXVjM1FnYjJ4a1EyaHBiR1JPYjJSbElEMGdiMnhrVG05a1pTNWphR2xzWkU1dlpHVTdYRzVjYmlBZ0lDQmpiMjV6ZENCamFHbHNaRTV2WkdVZ1BTQnlaV052Ym1OcGJHVW9jR0Z5Wlc1MFJHOXRMQ0J2YkdSRGFHbHNaRTV2WkdVc0lHTm9hV3hrUld4bGJXVnVkQ3dnWTI5dWRHVjRkQ2s3WEc1Y2JpQWdJQ0JqYjI1emRDQmtiMjBnUFNCcGMwRnljbUY1S0dOb2FXeGtUbTlrWlNrZ1B5QmphR2xzWkU1dlpHVXViV0Z3S0c0Z1BUNGdiaTVrYjIwcElEb2dZMmhwYkdST2IyUmxMbVJ2YlR0Y2JseHVJQ0FnSUU5aWFtVmpkQzVoYzNOcFoyNG9iMnhrVG05a1pTd2dleUJrYjIwc0lHTm9hV3hrVG05a1pTd2daV3hsYldWdWRDQjlLVHRjYmx4dUlDQWdJR2xtSUNoMGVYQmxiMllnYVc1emRHRnVZMlV1WTI5dGNHOXVaVzUwUkdsa1ZYQmtZWFJsSUQwOVBTQW5ablZ1WTNScGIyNG5LU0I3WEc0Z0lDQWdJQ0JwYm5OMFlXNWpaUzVqYjIxd2IyNWxiblJFYVdSVmNHUmhkR1VvY0hKbGRsQnliM0J6TENCd2NtVjJVM1JoZEdVcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhkb2FXeGxJQ2hwYm5OMFlXNWpaUzVmY21WdVpHVnlRMkZzYkdKaFkydHpMbXhsYm1kMGFDa2dlMXh1SUNBZ0lDQWdhVzV6ZEdGdVkyVXVYM0psYm1SbGNrTmhiR3hpWVdOcmN5NXdiM0FvS1M1allXeHNLR2x1YzNSaGJtTmxLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdiMnhrVG05a1pUdGNibjFjYmx4dVkyOXVjM1FnWTNKbFlYUmxRMjl0Y0c5dVpXNTBJRDBnS0VOdmJuTjBjblZqZEc5eUxDQndjbTl3Y3l3Z1kyOXVkR1Y0ZENrZ1BUNGdlMXh1SUNCc1pYUWdhVzV6ZEdGdVkyVTdYRzRnSUdsbUlDZ2hLRU52Ym5OMGNuVmpkRzl5TG5CeWIzUnZkSGx3WlNBbUppQkRiMjV6ZEhKMVkzUnZjaTV3Y205MGIzUjVjR1V1Y21WdVpHVnlLU2tnZTF4dUlDQWdJR052Ym5OMElISmxibVJsY2lBOUlFTnZibk4wY25WamRHOXlPMXh1SUNBZ0lFTnZibk4wY25WamRHOXlJRDBnWm5WdVkzUnBiMjRnS0hCeWIzQnpMQ0JqYjI1MFpYaDBLU0I3WEc0Z0lDQWdJQ0JEYjIxd2IyNWxiblF1Y0hKdmRHOTBlWEJsTG1OdmJuTjBjblZqZEc5eUxtSnBibVFvZEdocGN5d2djSEp2Y0hNc0lHTnZiblJsZUhRcE8xeHVJQ0FnSUgxY2JpQWdJQ0JEYjI1emRISjFZM1J2Y2k1d2NtOTBiM1I1Y0dVZ1BTQkRiMjF3YjI1bGJuUXVjSEp2ZEc5MGVYQmxPMXh1SUNBZ0lFTnZibk4wY25WamRHOXlMbkJ5YjNSdmRIbHdaUzV5Wlc1a1pYSWdQU0JtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJ5Wlc1a1pYSW9kR2hwY3k1d2NtOXdjeWs3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnYVc1emRHRnVZMlVnUFNCdVpYY2dRMjl1YzNSeWRXTjBiM0lvY0hKdmNITXNJR052Ym5SbGVIUXBPMXh1SUNCRGIyMXdiMjVsYm5RdVkyRnNiQ2hwYm5OMFlXNWpaU3dnY0hKdmNITXNJR052Ym5SbGVIUXBPMXh1WEc0Z0lHbHVjM1JoYm1ObExtTnZibk4wY25WamRHOXlJRDBnUTI5dWMzUnlkV04wYjNJN1hHNGdJSEpsZEhWeWJpQnBibk4wWVc1alpUdGNibjFjYmx4dVkyOXVjM1FnYzJWMFEyOXRjRzl1Wlc1MFVISnZjSE1nUFNBb2FXNXpkR0Z1WTJVc0lIQnliM0J6S1NBOVBpQjdYRzRnSUdOdmJuTjBJR2x6VlhCa1lYUmxJRDBnSVNGcGJuTjBZVzVqWlZ0SlRsUkZVazVCVEY5T1QwUkZYVHRjYmlBZ2FXWWdLR2x6VlhCa1lYUmxJQ1ltSUhSNWNHVnZaaUJwYm5OMFlXNWpaUzVqYjIxd2IyNWxiblJYYVd4c1VtVmpaV2wyWlZCeWIzQnpJRDA5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ2FXNXpkR0Z1WTJVdVkyOXRjRzl1Wlc1MFYybHNiRkpsWTJWcGRtVlFjbTl3Y3lod2NtOXdjeWs3WEc0Z0lIMGdaV3h6WlNCcFppQW9JV2x6VlhCa1lYUmxJQ1ltSUhSNWNHVnZaaUJwYm5OMFlXNWpaUzVqYjIxd2IyNWxiblJYYVd4c1RXOTFiblFnUFQwOUlDZG1kVzVqZEdsdmJpY3BlMXh1SUNBZ0lHbHVjM1JoYm1ObExtTnZiWEJ2Ym1WdWRGZHBiR3hOYjNWdWRDZ3BPMXh1SUNCOVhHNWNiaUFnYVdZZ0tDRnBibk4wWVc1alpTNXdjbVYyVUhKdmNITXBJR2x1YzNSaGJtTmxMbkJ5WlhaUWNtOXdjeUE5SUdsdWMzUmhibU5sTG5CeWIzQnpPMXh1SUNCcFppQW9JV2x1YzNSaGJtTmxMbkJ5WlhaRGIyNTBaWGgwS1NCcGJuTjBZVzVqWlM1d2NtVjJRMjl1ZEdWNGRDQTlJR2x1YzNSaGJtTmxMbU52Ym5SbGVIUTdYRzVjYmlBZ2FXNXpkR0Z1WTJVdWNISnZjSE1nUFNCd2NtOXdjenRjYm4xY2JseHVZMjl1YzNRZ2NtVnVaR1Z5UTI5dGNHOXVaVzUwSUQwZ0tHbHVjM1JoYm1ObExDQmpiMjUwWlhoMEtTQTlQaUI3WEc0Z0lHbHVjM1JoYm1ObExuQnlaWFpRY205d2N5QTlJR2x1YzNSaGJtTmxMbkJ5WlhaVGRHRjBaU0E5SUdsdWMzUmhibU5sTG5CeVpYWkRiMjUwWlhoMElEMGdiblZzYkR0Y2JseHVJQ0JwWmlBb2RIbHdaVzltSUdsdWMzUmhibU5sTG1kbGRFTm9hV3hrUTI5dWRHVjRkQ0E5UFQwZ0oyWjFibU4wYVc5dUp5a2dlMXh1SUNBZ0lHTnZiblJsZUhRZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmpiMjUwWlhoMExDQnBibk4wWVc1alpTNW5aWFJEYUdsc1pFTnZiblJsZUhRb0tTazdYRzRnSUgxY2JseHVJQ0JqYjI1emRDQmphR2xzWkVWc1pXMWxiblFnUFNCcGJuTjBZVzVqWlM1eVpXNWtaWElvS1R0Y2JseHVJQ0JzWlhRZ1kyaHBiR1JPYjJSbElEMGdiblZzYkR0Y2JpQWdiR1YwSUdSdmJTQTlJRzUxYkd3N1hHNGdJR2xtSUNocGMwRnljbUY1S0dOb2FXeGtSV3hsYldWdWRDa3BJSHRjYmlBZ0lDQmphR2xzWkU1dlpHVWdQU0JqYUdsc1pFVnNaVzFsYm5RdWJXRndLR1ZzWlcxbGJuUWdQVDRnWTNKbFlYUmxUbTlrWlNobGJHVnRaVzUwTENCamIyNTBaWGgwS1NsY2JpQWdJQ0JrYjIwZ1BTQmphR2xzWkU1dlpHVXViV0Z3S0c0Z1BUNGdiaTVrYjIwcE8xeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lHTm9hV3hrVG05a1pTQTlJR055WldGMFpVNXZaR1VvWTJocGJHUkZiR1Z0Wlc1MExDQmpiMjUwWlhoMEtUdGNiaUFnSUNCa2IyMGdQU0JqYUdsc1pFNXZaR1V1Wkc5dE8xeHVJQ0I5WEc0Z0lFOWlhbVZqZEM1aGMzTnBaMjRvYVc1emRHRnVZMlZiU1U1VVJWSk9RVXhmVGs5RVJWMHNJSHNnWkc5dExDQmphR2xzWkU1dlpHVXNJR2x1YzNSaGJtTmxJSDBwTzF4dVhHNGdJR2xtSUNoMGVYQmxiMllnYVc1emRHRnVZMlV1WTI5dGNHOXVaVzUwUkdsa1RXOTFiblFnUFQwOUlDZG1kVzVqZEdsdmJpY3BJSHRjYmlBZ0lDQnBibk4wWVc1alpTNWpiMjF3YjI1bGJuUkVhV1JOYjNWdWRDZ3BPMXh1SUNCOVhHNWNiaUFnZDJocGJHVWdLR2x1YzNSaGJtTmxMbDl5Wlc1a1pYSkRZV3hzWW1GamEzTXViR1Z1WjNSb0tTQjdYRzRnSUNBZ2FXNXpkR0Z1WTJVdVgzSmxibVJsY2tOaGJHeGlZV05yY3k1d2IzQW9LUzVqWVd4c0tHbHVjM1JoYm1ObEtUdGNiaUFnZlZ4dWZWeHVYRzVsZUhCdmNuUWdleUJEYjIxd2IyNWxiblFzSUdKMWFXeGtRMjl0Y0c5dVpXNTBMQ0IxY0dSaGRHVkRiMjF3YjI1bGJuUWdmVHRjYmlKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVVZCTzBGQlEwRTdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVlJCTzBGQlFVRTdRVUZYUVR0QlFVVkJPMEZCUTBFN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZNUVR0QlFVRkJPMEZCVDBFN1FVRkRRVHRCUVVOQk8wRkJSVUU3UVVFMVFrRTdRVUZEUVR0QlFUaENRVHRCUVVGQk8wRkJRVUU3UVVGRlFUdEJRVVZCTzBGQlEwRTdRVUZGUVR0QlFVRkJPMEZCUVVFN1FVRkRRVHRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVWQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUTBFN1FVRlJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlJVRTdRVUZGUVR0QlFVRkJPMEZCUVVFN1FVRkZRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlFVRTdRVUZCUVR0QlFVTkJPMEZCUVVFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3SWl3aWMyOTFjbU5sVW05dmRDSTZJaUo5XFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vc3JjL2NvbXBvbmVudC5qc1xcblwiKTtcbiAgICAgICAgLyoqKi9cbiAgICAgIH0sXG5cbiAgICAgIC8qKiovXG4gICAgICBcIi4vc3JjL2NvbnN0YW50cy5qc1wiOlxuICAgICAgLyohKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICAgICAgICEqKiogLi9zcmMvY29uc3RhbnRzLmpzICoqKiFcbiAgICAgICAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICAgICAgLyohIGV4cG9ydHMgcHJvdmlkZWQ6IEFUVFJfS0VZLCBURVhUX0VMRU1FTlQsIFNZTkNfUkVOREVSLCBBU1lOQ19SRU5ERVIsIEZPUkNFX1JFTkRFUiwgSU5URVJOQUxfTk9ERSAqL1xuXG4gICAgICAvKioqL1xuICAgICAgZnVuY3Rpb24gKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICAgICBldmFsKFwiX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXFxcIkFUVFJfS0VZXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBBVFRSX0tFWTsgfSk7XFxuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcXFwiVEVYVF9FTEVNRU5UXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBURVhUX0VMRU1FTlQ7IH0pO1xcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXFxcIlNZTkNfUkVOREVSXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBTWU5DX1JFTkRFUjsgfSk7XFxuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcXFwiQVNZTkNfUkVOREVSXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBBU1lOQ19SRU5ERVI7IH0pO1xcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXFxcIkZPUkNFX1JFTkRFUlxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gRk9SQ0VfUkVOREVSOyB9KTtcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXCJJTlRFUk5BTF9OT0RFXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBJTlRFUk5BTF9OT0RFOyB9KTtcXG5cXG5cXG52YXIgVEVYVF9FTEVNRU5UID0gXFxcIkBlcmVhY3QvX190ZXh0X2VsZW1lbnRfX1xcXCI7XFxudmFyIElOVEVSTkFMX05PREUgPSAnQGVyZWFjdC9fX2ludGVybmFsX25vZGUnO1xcbnZhciBBVFRSX0tFWSA9ICdAZXJlYWN0L19fYXR0cl9rZXlfXyc7IC8vIFJlbmRlciBtb2RlIGNvbnN0YW50c1xcblxcbnZhciBTWU5DX1JFTkRFUiA9ICdAZXJlYWN0L3JlbmRlcl9zeW5jJztcXG52YXIgQVNZTkNfUkVOREVSID0gJ0BlcmVhY3QvcmVuZGVyX2FzeW5jJztcXG52YXIgRk9SQ0VfUkVOREVSID0gJ0BlcmVhY3QvZm9yY2VfdXBkYXRlJztcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl6Y21NdlkyOXVjM1JoYm5SekxtcHpMbXB6SWl3aWMyOTFjbU5sY3lJNld5SjNaV0p3WVdOck9pOHZSVkpsWVdOMEx5NHZjM0pqTDJOdmJuTjBZVzUwY3k1cWN6ODFabUl3SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpZDFjMlVnYzNSeWFXTjBKenRjYmx4dVkyOXVjM1FnVkVWWVZGOUZURVZOUlU1VUlEMGdZRUJsY21WaFkzUXZYMTkwWlhoMFgyVnNaVzFsYm5SZlgyQTdYRzVjYm1OdmJuTjBJRWxPVkVWU1RrRk1YMDVQUkVVZ1BTQW5RR1Z5WldGamRDOWZYMmx1ZEdWeWJtRnNYMjV2WkdVbk8xeHVYRzVqYjI1emRDQkJWRlJTWDB0RldTQTlJQ2RBWlhKbFlXTjBMMTlmWVhSMGNsOXJaWGxmWHljN1hHNWNiaTh2SUZKbGJtUmxjaUJ0YjJSbElHTnZibk4wWVc1MGMxeHVZMjl1YzNRZ1UxbE9RMTlTUlU1RVJWSWdQU0FuUUdWeVpXRmpkQzl5Wlc1a1pYSmZjM2x1WXljN1hHNWpiMjV6ZENCQlUxbE9RMTlTUlU1RVJWSWdQU0FuUUdWeVpXRmpkQzl5Wlc1a1pYSmZZWE41Ym1Nbk8xeHVZMjl1YzNRZ1JrOVNRMFZmVWtWT1JFVlNJRDBnSjBCbGNtVmhZM1F2Wm05eVkyVmZkWEJrWVhSbEp6dGNibHh1Wlhod2IzSjBJSHNnUVZSVVVsOUxSVmtzSUZSRldGUmZSVXhGVFVWT1ZDd2dVMWxPUTE5U1JVNUVSVklzSUVGVFdVNURYMUpGVGtSRlVpd2dSazlTUTBWZlVrVk9SRVZTTENCSlRsUkZVazVCVEY5T1QwUkZJSDA3WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkRRVHRCUVVOQk8wRkJSVUU3UVVGRlFUdEJRVU5CTzBGQlJVRTdRVUZEUVR0QlFVTkJPeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlmUT09XFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vc3JjL2NvbnN0YW50cy5qc1xcblwiKTtcbiAgICAgICAgLyoqKi9cbiAgICAgIH0sXG5cbiAgICAgIC8qKiovXG4gICAgICBcIi4vc3JjL2luZGV4LmpzXCI6XG4gICAgICAvKiEqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAgICAgICAhKioqIC4vc3JjL2luZGV4LmpzICoqKiFcbiAgICAgICAgXFwqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgICAvKiEgZXhwb3J0cyBwcm92aWRlZDogZGVmYXVsdCAqL1xuXG4gICAgICAvKioqL1xuICAgICAgZnVuY3Rpb24gKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICAgICBldmFsKFwiX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfcmVuZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3JlbmRlciAqLyBcXFwiLi9zcmMvcmVuZGVyLmpzXFxcIik7XFxuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9jb21wb25lbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY29tcG9uZW50ICovIFxcXCIuL3NyYy9jb21wb25lbnQuanNcXFwiKTtcXG5cXG5cXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bXFxcImRlZmF1bHRcXFwiXSA9ICh7XFxuICBjcmVhdGVFbGVtZW50OiBfcmVuZGVyX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcImNyZWF0ZUVsZW1lbnRcXFwiXSxcXG4gIHJlbmRlcjogX3JlbmRlcl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fW1xcXCJyZW5kZXJcXFwiXSxcXG4gIENvbXBvbmVudDogX2NvbXBvbmVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fW1xcXCJDb21wb25lbnRcXFwiXVxcbn0pOy8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXpjbU12YVc1a1pYZ3Vhbk11YW5NaUxDSnpiM1Z5WTJWeklqcGJJbmRsWW5CaFkyczZMeTlGVW1WaFkzUXZMaTl6Y21NdmFXNWtaWGd1YW5NL1lqWXpOU0pkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKcGJYQnZjblFnZXlCeVpXNWtaWElzSUdOeVpXRjBaVVZzWlcxbGJuUWdmU0JtY205dElDY3VMM0psYm1SbGNpYzdYRzVwYlhCdmNuUWdleUJEYjIxd2IyNWxiblFnZlNCbWNtOXRJQ2N1TDJOdmJYQnZibVZ1ZENjN1hHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElIc2dZM0psWVhSbFJXeGxiV1Z1ZEN3Z2NtVnVaR1Z5TENCRGIyMXdiMjVsYm5RZ2ZUdGNiaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZEUVR0QlFVVkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUVpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vc3JjL2luZGV4LmpzXFxuXCIpO1xuICAgICAgICAvKioqL1xuICAgICAgfSxcblxuICAgICAgLyoqKi9cbiAgICAgIFwiLi9zcmMvcmVuZGVyLmpzXCI6XG4gICAgICAvKiEqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgICAgICAgISoqKiAuL3NyYy9yZW5kZXIuanMgKioqIVxuICAgICAgICBcXCoqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgICAvKiEgZXhwb3J0cyBwcm92aWRlZDogY3JlYXRlRWxlbWVudCwgcmVuZGVyLCByZWNvbmNpbGUsIGNyZWF0ZU5vZGUsIHJlY29uY2lsZUNoaWxkcmVuICovXG5cbiAgICAgIC8qKiovXG4gICAgICBmdW5jdGlvbiAobW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgICAgIGV2YWwoXCJfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XFxuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcXFwiY3JlYXRlRWxlbWVudFxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gY3JlYXRlRWxlbWVudDsgfSk7XFxuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcXFwicmVuZGVyXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiByZW5kZXI7IH0pO1xcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXFxcInJlY29uY2lsZVxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gcmVjb25jaWxlOyB9KTtcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXCJjcmVhdGVOb2RlXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBjcmVhdGVOb2RlOyB9KTtcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXCJyZWNvbmNpbGVDaGlsZHJlblxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gcmVjb25jaWxlQ2hpbGRyZW47IH0pO1xcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfY29uc3RhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2NvbnN0YW50cyAqLyBcXFwiLi9zcmMvY29uc3RhbnRzLmpzXFxcIik7XFxuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9jb21wb25lbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY29tcG9uZW50ICovIFxcXCIuL3NyYy9jb21wb25lbnQuanNcXFwiKTtcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWxzICovIFxcXCIuL3NyYy91dGlscy5qc1xcXCIpO1xcbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcXFwiZnVuY3Rpb25cXFwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFxcXCJzeW1ib2xcXFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXFxcImZ1bmN0aW9uXFxcIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcXFwic3ltYm9sXFxcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxcblxcblxcblxcbiAvLyByZW5kZXJcXG5cXG52YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKGVsZW1lbnQsIGNvbnRhaW5lckRvbSkge1xcbiAgcmVjb25jaWxlKGNvbnRhaW5lckRvbSwgbnVsbCwgZWxlbWVudCwge30pO1xcbn07IC8vIGNyZWF0ZUVsZW1lbnRcXG5cXG5cXG52YXIgY3JlYXRlRWxlbWVudCA9IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQodHlwZSwgaW5pdFByb3BzKSB7XFxuICB2YXIgX3JlZjtcXG5cXG4gIHZhciBwcm9wcyA9IE9iamVjdC5hc3NpZ24oe30sIGluaXRQcm9wcyk7XFxuXFxuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuID4gMiA/IF9sZW4gLSAyIDogMCksIF9rZXkgPSAyOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XFxuICAgIGFyZ3NbX2tleSAtIDJdID0gYXJndW1lbnRzW19rZXldO1xcbiAgfVxcblxcbiAgdmFyIHJhd0NoaWxkcmVuID0gKF9yZWYgPSBbXSkuY29uY2F0LmFwcGx5KF9yZWYsIGFyZ3MpO1xcblxcbiAgdmFyIGNoaWxkcmVuID0gcmF3Q2hpbGRyZW4uZmlsdGVyKGZ1bmN0aW9uIChjaGlsZCkge1xcbiAgICByZXR1cm4gY2hpbGQgIT0gbnVsbCAmJiB0eXBlb2YgY2hpbGQgIT09ICdib29sZWFuJztcXG4gIH0pLm1hcChmdW5jdGlvbiAoY2hpbGQpIHtcXG4gICAgcmV0dXJuIGNoaWxkIGluc3RhbmNlb2YgT2JqZWN0ID8gY2hpbGQgOiBjcmVhdGVUZXh0RWxlbWVudChjaGlsZCk7XFxuICB9KTtcXG4gIHByb3BzLmNoaWxkcmVuID0gY2hpbGRyZW47XFxuICByZXR1cm4ge1xcbiAgICB0eXBlOiB0eXBlLFxcbiAgICBwcm9wczogcHJvcHMsXFxuICAgIGNoaWxkcmVuOiBjaGlsZHJlblxcbiAgfTtcXG59O1xcblxcbnZhciBjcmVhdGVUZXh0RWxlbWVudCA9IGZ1bmN0aW9uIGNyZWF0ZVRleHRFbGVtZW50KHRleHQpIHtcXG4gIHJldHVybiB7XFxuICAgIHR5cGU6IF9jb25zdGFudHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1tcXFwiVEVYVF9FTEVNRU5UXFxcIl0sXFxuICAgIHByb3BzOiB7XFxuICAgICAgbm9kZVZhbHVlOiB0ZXh0XFxuICAgIH1cXG4gIH07XFxufTtcXG5cXG52YXIgY3JlYXRlTm9kZSA9IGZ1bmN0aW9uIGNyZWF0ZU5vZGUoZWxlbWVudCwgY29udGV4dCkge1xcbiAgdmFyIHR5cGUgPSBlbGVtZW50LnR5cGUsXFxuICAgICAgcHJvcHMgPSBlbGVtZW50LnByb3BzO1xcbiAgdmFyIGlzVGV4dEVsZW1lbnQgPSB0eXBlID09PSBfY29uc3RhbnRzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcIlRFWFRfRUxFTUVOVFxcXCJdO1xcbiAgdmFyIGlzQ29tcG9uZW50ID0gdHlwZW9mIHR5cGUgPT09ICdmdW5jdGlvbic7XFxuXFxuICBpZiAoaXNDb21wb25lbnQpIHtcXG4gICAgcmV0dXJuIE9iamVjdChfY29tcG9uZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bXFxcImJ1aWxkQ29tcG9uZW50XFxcIl0pKGVsZW1lbnQsIGNvbnRleHQpO1xcbiAgfVxcblxcbiAgdmFyIGRvbSA9IGlzVGV4dEVsZW1lbnQgPyBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJykgOiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHR5cGUpO1xcbiAgdmFyIGNoaWxkTm9kZXMgPSByZWNvbmNpbGVDaGlsZHJlbih7XFxuICAgIGRvbTogZG9tXFxuICB9LCBlbGVtZW50LCBjb250ZXh0KTtcXG4gIHVwZGF0ZVByb3BlcnRpZXMoZG9tLCB7fSwgcHJvcHMpO1xcbiAgcmV0dXJuIHtcXG4gICAgZG9tOiBkb20sXFxuICAgIGVsZW1lbnQ6IGVsZW1lbnQsXFxuICAgIGNoaWxkTm9kZXM6IGNoaWxkTm9kZXNcXG4gIH07XFxufTtcXG5cXG52YXIgcmVjb25jaWxlID0gZnVuY3Rpb24gcmVjb25jaWxlKHBhcmVudERvbSwgb2xkTm9kZSwgZWxlbWVudCwgY29udGV4dCkge1xcbiAgaWYgKG9sZE5vZGUgPT0gbnVsbCkge1xcbiAgICBpZiAoT2JqZWN0KF91dGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fW1xcXCJpc0FycmF5XFxcIl0pKGVsZW1lbnQpKSB7XFxuICAgICAgdmFyIF9ub2RlID0gZWxlbWVudC5tYXAoY3JlYXRlTm9kZSk7XFxuXFxuICAgICAgX25vZGUuZm9yRWFjaChmdW5jdGlvbiAobikge1xcbiAgICAgICAgcGFyZW50RG9tLmFwcGVuZENoaWxkKG4uZG9tKTtcXG4gICAgICB9KTtcXG4gICAgfVxcblxcbiAgICB2YXIgbm9kZSA9IGNyZWF0ZU5vZGUoZWxlbWVudCwgY29udGV4dCk7XFxuXFxuICAgIGlmIChPYmplY3QoX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bXFxcImlzQXJyYXlcXFwiXSkobm9kZS5kb20pKSB7XFxuICAgICAgdmFyIGRvbXMgPSBPYmplY3QoX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bXFxcImZsYXR0ZW5cXFwiXSkobm9kZS5kb20pO1xcbiAgICAgIGRvbXMuZm9yRWFjaChmdW5jdGlvbiAoZG9tKSB7XFxuICAgICAgICByZXR1cm4gcGFyZW50RG9tLmFwcGVuZENoaWxkKGRvbSk7XFxuICAgICAgfSk7XFxuICAgIH0gZWxzZSBpZiAobm9kZS5kb20pIHtcXG4gICAgICBwYXJlbnREb20uYXBwZW5kQ2hpbGQobm9kZS5kb20pO1xcbiAgICB9XFxuXFxuICAgIHJldHVybiBub2RlO1xcbiAgfSBlbHNlIGlmIChlbGVtZW50ID09IG51bGwpIHtcXG4gICAgaWYgKE9iamVjdChfdXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1tcXFwiaXNBcnJheVxcXCJdKShvbGROb2RlKSkge1xcbiAgICAgIG9sZE5vZGUuZm9yRWFjaChmdW5jdGlvbiAobikge1xcbiAgICAgICAgcGFyZW50RG9tLnJlbW92ZUNoaWxkKG4uZG9tKTtcXG4gICAgICB9KTtcXG4gICAgfSBlbHNlIGlmIChvbGROb2RlLmRvbSkge1xcbiAgICAgIHBhcmVudERvbS5yZW1vdmVDaGlsZChvbGROb2RlLmRvbSk7XFxuICAgIH1cXG5cXG4gICAgcmV0dXJuIG51bGw7XFxuICB9IGVsc2UgaWYgKE9iamVjdChfdXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1tcXFwiaXNBcnJheVxcXCJdKShvbGROb2RlKSAmJiBPYmplY3QoX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bXFxcImlzQXJyYXlcXFwiXSkoZWxlbWVudCkpIHtcXG4gICAgcmV0dXJuIHJlY29uY2lsZUNoaWxkcmVuKHtcXG4gICAgICBkb206IHBhcmVudERvbSxcXG4gICAgICBjaGlsZE5vZGVzOiBvbGROb2RlXFxuICAgIH0sIHtcXG4gICAgICBwcm9wczoge1xcbiAgICAgICAgY2hpbGRyZW46IGVsZW1lbnRcXG4gICAgICB9XFxuICAgIH0sIGNvbnRleHQpO1xcbiAgfSBlbHNlIGlmICgob2xkTm9kZS5lbGVtZW50IHx8IHt9KS50eXBlICE9PSBlbGVtZW50LnR5cGUpIHtcXG4gICAgdmFyIF9ub2RlMiA9IGNyZWF0ZU5vZGUoZWxlbWVudCwgY29udGV4dCk7XFxuXFxuICAgIGlmIChvbGROb2RlLmVsZW1lbnQgJiYgdHlwZW9mIG9sZE5vZGUuZWxlbWVudC50eXBlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBvbGROb2RlLmluc3RhbmNlLmNvbXBvbmVudFdpbGxVbm1vdW50ID09PSAnZnVuY3Rpb24nKSB7XFxuICAgICAgb2xkTm9kZS5pbnN0YW5jZS5jb21wb25lbnRXaWxsVW5tb3VudCgpO1xcbiAgICB9XFxuXFxuICAgIGlmIChvbGROb2RlLmRvbSB8fCBvbGROb2RlWzBdLmRvbSkge1xcbiAgICAgIHBhcmVudERvbS5yZXBsYWNlQ2hpbGQoX25vZGUyLmRvbSwgb2xkTm9kZS5kb20gfHwgb2xkTm9kZVswXS5kb20pO1xcbiAgICB9XFxuXFxuICAgIHJldHVybiBfbm9kZTI7XFxuICB9IGVsc2UgaWYgKHR5cGVvZiBlbGVtZW50LnR5cGUgPT09ICdzdHJpbmcnKSB7XFxuICAgIG9sZE5vZGUuY2hpbGROb2RlcyA9IHJlY29uY2lsZUNoaWxkcmVuKG9sZE5vZGUsIGVsZW1lbnQsIGNvbnRleHQpO1xcbiAgICB1cGRhdGVQcm9wZXJ0aWVzKG9sZE5vZGUuZG9tLCBvbGROb2RlLmVsZW1lbnQucHJvcHMsIGVsZW1lbnQucHJvcHMpO1xcbiAgICBvbGROb2RlLmVsZW1lbnQgPSBlbGVtZW50O1xcbiAgICByZXR1cm4gb2xkTm9kZTtcXG4gIH0gZWxzZSB7XFxuICAgIHJldHVybiBPYmplY3QoX2NvbXBvbmVudF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fW1xcXCJ1cGRhdGVDb21wb25lbnRcXFwiXSkoX2NvbnN0YW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fW1xcXCJTWU5DX1JFTkRFUlxcXCJdLCBwYXJlbnREb20sIG9sZE5vZGUsIGVsZW1lbnQsIGNvbnRleHQsIHRydWUpO1xcbiAgfVxcbn07XFxuXFxudmFyIHJlY29uY2lsZUNoaWxkcmVuID0gZnVuY3Rpb24gcmVjb25jaWxlQ2hpbGRyZW4ob2xkTm9kZSwgZWxlbWVudCwgY29udGV4dCkge1xcbiAgdmFyIG9sZENoaWxkTm9kZXMgPSBvbGROb2RlLmNoaWxkTm9kZXMgfHwgW107XFxuICB2YXIgY2hpbGRFbGVtZW50cyA9IGVsZW1lbnQucHJvcHMuY2hpbGRyZW4gfHwgW107XFxuICB2YXIgY2hpbGROb2RlcyA9IFtdO1xcbiAgdmFyIGxlbmd0aCA9IE1hdGgubWF4KG9sZENoaWxkTm9kZXMubGVuZ3RoLCBjaGlsZEVsZW1lbnRzLmxlbmd0aCk7XFxuXFxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XFxuICAgIHZhciBjaGlsZE5vZGUgPSByZWNvbmNpbGUob2xkTm9kZS5kb20sIG9sZENoaWxkTm9kZXNbaV0sIGNoaWxkRWxlbWVudHNbaV0sIGNvbnRleHQpO1xcbiAgICBjaGlsZE5vZGVzLnB1c2goY2hpbGROb2RlKTtcXG4gIH1cXG5cXG4gIHJldHVybiBjaGlsZE5vZGVzO1xcbn07XFxuXFxudmFyIHVwZGF0ZVByb3BlcnRpZXMgPSBmdW5jdGlvbiB1cGRhdGVQcm9wZXJ0aWVzKGRvbSwgb2xkUHJvcHMsIHByb3BzKSB7XFxuICBmb3IgKG5hbWUgaW4gb2xkUHJvcHMpIHtcXG4gICAgaWYgKHByb3BzW25hbWVdID09IG51bGwpIHtcXG4gICAgICBzZXRBY2Nlc3Nvcihkb20sIG5hbWUsIHVuZGVmaW5lZCk7XFxuICAgIH1cXG4gIH1cXG5cXG4gIGZvciAobmFtZSBpbiBwcm9wcykge1xcbiAgICAvLyBmaXg6IG5hbWUgPT09ICd2YWx1ZScgfHwgbmFtZSA9PT0gJ2NoZWNrZWQnID8gZG9tW25hbWVdIDogb2xkUHJvcHNbbmFtZV1cXG4gICAgaWYgKHByb3BzW25hbWVdICE9PSBvbGRQcm9wc1tuYW1lXSkge1xcbiAgICAgIHNldEFjY2Vzc29yKGRvbSwgbmFtZSwgcHJvcHNbbmFtZV0pO1xcbiAgICB9XFxuICB9XFxufTtcXG5cXG52YXIgc2V0QWNjZXNzb3IgPSBmdW5jdGlvbiBzZXRBY2Nlc3Nvcihkb20sIG5hbWUsIHZhbHVlKSB7XFxuICAvLyBjbGFzc05hbWUgaHRtbEZvclxcbiAgaWYgKG5hbWUgPT09ICdjbGFzc05hbWUnKSB7XFxuICAgIG5hbWUgPSAnY2xhc3MnO1xcbiAgfVxcblxcbiAgaWYgKG5hbWUgPT09ICdodG1sRm9yJykge1xcbiAgICBuYW1lID0gJ2Zvcic7XFxuICB9XFxuXFxuICBpZiAobmFtZSA9PT0gJ2tleScgfHwgbmFtZSA9PT0gJ2NoaWxkcmVuJyB8fCBuYW1lID09PSAnaW5uZXJIVE1MJykgey8vIGlnbm9yZVxcbiAgfSBlbHNlIGlmIChuYW1lID09PSAnbm9kZVZhbHVlJykge1xcbiAgICBkb20ubm9kZVZhbHVlID0gdmFsdWU7XFxuICB9IGVsc2UgaWYgKG5hbWUgPT09ICdyZWYnICYmIHZhbHVlICE9IG51bGwpIHtcXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJykge1xcbiAgICAgIHZhbHVlKGRvbSk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgY29uc29sZS5lcnJvcigncmVmIHNob3VsZCBiZSBhbiBmdW5jdGlvbicpO1xcbiAgICB9XFxuICB9IGVsc2UgaWYgKG5hbWUgPT09ICdzdHlsZScpIHtcXG4gICAgaWYgKF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0Jykge1xcbiAgICAgIGZvciAodmFyIGkgaW4gdmFsdWUpIHtcXG4gICAgICAgIGRvbS5zdHlsZVtpXSA9IHR5cGVvZiB2YWx1ZVtpXSA9PT0gJ251bWJlcicgPyBcXFwiXFxcIi5jb25jYXQodmFsdWVbaV0sIFxcXCJweFxcXCIpIDogdmFsdWVbaV07XFxuICAgICAgfVxcbiAgICB9XFxuXFxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnIHx8IHZhbHVlID09IG51bGwpIHtcXG4gICAgICBkb20uc3R5bGUgPSB2YWx1ZTtcXG4gICAgfVxcbiAgfSBlbHNlIGlmIChuYW1lID09PSAnZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwnKSB7XFxuICAgIGlmIChfdHlwZW9mKHZhbHVlKSA9PT0gJ29iamVjdCcpIHtcXG4gICAgICBkb20uaW5uZXJIVE1MID0gdmFsdWUuX19odG1sO1xcbiAgICB9XFxuICB9IGVsc2UgaWYgKG5hbWUuc3RhcnRzV2l0aCgnb24nKSkge1xcbiAgICB2YXIgdXNlQ2FwdHVyZSA9IG5hbWUuZW5kc1dpdGgoJ0NhcHR1cmUnKTtcXG4gICAgdmFyIGV2ZW50VHlwZSA9IG5hbWUudG9Mb3dlckNhc2UoKS5zdWJzdHJpbmcoMik7XFxuXFxuICAgIGlmICh2YWx1ZSkge1xcbiAgICAgIGRvbS5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgZXZlbnRQcm94eSwgdXNlQ2FwdHVyZSk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgZG9tLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnRUeXBlLCBldmVudFByb3h5LCB1c2VDYXB0dXJlKTtcXG4gICAgfVxcblxcbiAgICAoZG9tLl9saXN0ZW5lciB8fCAoZG9tLl9saXN0ZW5lciA9IHt9KSlbZXZlbnRUeXBlXSA9IHZhbHVlO1xcbiAgfSBlbHNlIHtcXG4gICAgZG9tLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XFxuICB9XFxufTtcXG5cXG5mdW5jdGlvbiBldmVudFByb3h5KGUpIHtcXG4gIHJldHVybiB0aGlzLl9saXN0ZW5lcltlLnR5cGVdKGUpO1xcbn1cXG5cXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl6Y21NdmNtVnVaR1Z5TG1wekxtcHpJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dlJWSmxZV04wTHk0dmMzSmpMM0psYm1SbGNpNXFjejh4TVdaaklsMHNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbWx0Y0c5eWRDQjdJRlJGV0ZSZlJVeEZUVVZPVkN3Z1UxbE9RMTlTUlU1RVJWSWdmU0JtY205dElDY3VMMk52Ym5OMFlXNTBjeWM3WEc1cGJYQnZjblFnZXlCaWRXbHNaRU52YlhCdmJtVnVkQ3dnZFhCa1lYUmxRMjl0Y0c5dVpXNTBJSDBnWm5KdmJTQW5MaTlqYjIxd2IyNWxiblFuTzF4dWFXMXdiM0owSUhzZ2FYTkJjbkpoZVN3Z1pteGhkSFJsYmlCOUlHWnliMjBnSnk0dmRYUnBiSE1uTzF4dVhHNHZMeUJ5Wlc1a1pYSmNibU52Ym5OMElISmxibVJsY2lBOUlDaGxiR1Z0Wlc1MExDQmpiMjUwWVdsdVpYSkViMjBwSUQwK0lIdGNiaUFnY21WamIyNWphV3hsS0dOdmJuUmhhVzVsY2tSdmJTd2diblZzYkN3Z1pXeGxiV1Z1ZEN3Z2UzMHBPMXh1ZlZ4dVhHNHZMeUJqY21WaGRHVkZiR1Z0Wlc1MFhHNWpiMjV6ZENCamNtVmhkR1ZGYkdWdFpXNTBJRDBnS0hSNWNHVXNJR2x1YVhSUWNtOXdjeXdnTGk0dVlYSm5jeWtnUFQ0Z2UxeHVJQ0JqYjI1emRDQndjbTl3Y3lBOUlFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lHbHVhWFJRY205d2N5azdYRzRnSUdOdmJuTjBJSEpoZDBOb2FXeGtjbVZ1SUQwZ1cxMHVZMjl1WTJGMEtDNHVMbUZ5WjNNcE8xeHVJQ0JqYjI1emRDQmphR2xzWkhKbGJpQTlJSEpoZDBOb2FXeGtjbVZ1WEc0Z0lDQWdMbVpwYkhSbGNpaGphR2xzWkNBOVBpQmphR2xzWkNBaFBTQnVkV3hzSUNZbUlIUjVjR1Z2WmlCamFHbHNaQ0FoUFQwZ0oySnZiMnhsWVc0bktWeHVJQ0FnSUM1dFlYQW9ZMmhwYkdRZ1BUNGdZMmhwYkdRZ2FXNXpkR0Z1WTJWdlppQlBZbXBsWTNRZ1B5QmphR2xzWkNBNklHTnlaV0YwWlZSbGVIUkZiR1Z0Wlc1MEtHTm9hV3hrS1NrN1hHNWNiaUFnY0hKdmNITXVZMmhwYkdSeVpXNGdQU0JqYUdsc1pISmxianRjYmlBZ2NtVjBkWEp1SUhzZ2RIbHdaU3dnY0hKdmNITXNJR05vYVd4a2NtVnVJSDA3WEc1OVhHNWNibU52Ym5OMElHTnlaV0YwWlZSbGVIUkZiR1Z0Wlc1MElEMGdkR1Y0ZENBOVBpQjdYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdkSGx3WlRvZ1ZFVllWRjlGVEVWTlJVNVVMRnh1SUNBZ0lIQnliM0J6T2lCN0lHNXZaR1ZXWVd4MVpUb2dkR1Y0ZENCOUxGeHVJQ0I5WEc1OVhHNWNibU52Ym5OMElHTnlaV0YwWlU1dlpHVWdQU0FvWld4bGJXVnVkQ3dnWTI5dWRHVjRkQ2tnUFQ0Z2UxeHVJQ0JqYjI1emRDQjdJSFI1Y0dVc0lIQnliM0J6SUgwZ1BTQmxiR1Z0Wlc1ME8xeHVJQ0JqYjI1emRDQnBjMVJsZUhSRmJHVnRaVzUwSUQwZ2RIbHdaU0E5UFQwZ1ZFVllWRjlGVEVWTlJVNVVPMXh1SUNCamIyNXpkQ0JwYzBOdmJYQnZibVZ1ZENBOUlIUjVjR1Z2WmlCMGVYQmxJRDA5UFNBblpuVnVZM1JwYjI0bk8xeHVYRzRnSUdsbUlDaHBjME52YlhCdmJtVnVkQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQmlkV2xzWkVOdmJYQnZibVZ1ZENobGJHVnRaVzUwTENCamIyNTBaWGgwS1R0Y2JpQWdmVnh1WEc0Z0lHTnZibk4wSUdSdmJTQTlJR2x6VkdWNGRFVnNaVzFsYm5RZ1B5QmtiMk4xYldWdWRDNWpjbVZoZEdWVVpYaDBUbTlrWlNnbkp5a2dPaUJrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtIUjVjR1VwTzF4dUlDQmpiMjV6ZENCamFHbHNaRTV2WkdWeklEMGdjbVZqYjI1amFXeGxRMmhwYkdSeVpXNG9leUJrYjIwZ2ZTd2daV3hsYldWdWRDd2dZMjl1ZEdWNGRDazdYRzRnSUhWd1pHRjBaVkJ5YjNCbGNuUnBaWE1vWkc5dExDQjdmU3dnY0hKdmNITXBPMXh1WEc0Z0lISmxkSFZ5YmlCN0lHUnZiU3dnWld4bGJXVnVkQ3dnWTJocGJHUk9iMlJsY3lCOU8xeHVmVnh1WEc1amIyNXpkQ0J5WldOdmJtTnBiR1VnUFNBb2NHRnlaVzUwUkc5dExDQnZiR1JPYjJSbExDQmxiR1Z0Wlc1MExDQmpiMjUwWlhoMEtTQTlQaUI3WEc0Z0lHbG1JQ2h2YkdST2IyUmxJRDA5SUc1MWJHd3BJSHRjYmlBZ0lDQnBaaUFvYVhOQmNuSmhlU2hsYkdWdFpXNTBLU2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdibTlrWlNBOUlHVnNaVzFsYm5RdWJXRndLR055WldGMFpVNXZaR1VwTzF4dUlDQWdJQ0FnYm05a1pTNW1iM0pGWVdOb0tHNGdQVDRnZTF4dUlDQWdJQ0FnSUNCd1lYSmxiblJFYjIwdVlYQndaVzVrUTJocGJHUW9iaTVrYjIwcE8xeHVJQ0FnSUNBZ2ZTbGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0J1YjJSbElEMGdZM0psWVhSbFRtOWtaU2hsYkdWdFpXNTBMQ0JqYjI1MFpYaDBLVHRjYmx4dUlDQWdJR2xtSUNocGMwRnljbUY1S0c1dlpHVXVaRzl0S1NrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnWkc5dGN5QTlJR1pzWVhSMFpXNG9ibTlrWlM1a2IyMHBPMXh1SUNBZ0lDQWdaRzl0Y3k1bWIzSkZZV05vS0dSdmJTQTlQaUJ3WVhKbGJuUkViMjB1WVhCd1pXNWtRMmhwYkdRb1pHOXRLU2s3WEc0Z0lDQWdmU0JsYkhObElHbG1JQ2h1YjJSbExtUnZiU2tnZTF4dUlDQWdJQ0FnY0dGeVpXNTBSRzl0TG1Gd2NHVnVaRU5vYVd4a0tHNXZaR1V1Wkc5dEtUdGNiaUFnSUNCOVhHNGdJQ0FnY21WMGRYSnVJRzV2WkdVN1hHNGdJSDBnWld4elpTQnBaaUFvWld4bGJXVnVkQ0E5UFNCdWRXeHNLU0I3WEc0Z0lDQWdhV1lnS0dselFYSnlZWGtvYjJ4a1RtOWtaU2twSUh0Y2JpQWdJQ0FnSUc5c1pFNXZaR1V1Wm05eVJXRmphQ2h1SUQwK0lIdGNiaUFnSUNBZ0lDQWdjR0Z5Wlc1MFJHOXRMbkpsYlc5MlpVTm9hV3hrS0c0dVpHOXRLVHRjYmlBZ0lDQWdJSDBwWEc0Z0lDQWdmU0JsYkhObElHbG1JQ2h2YkdST2IyUmxMbVJ2YlNrZ2UxeHVJQ0FnSUNBZ2NHRnlaVzUwUkc5dExuSmxiVzkyWlVOb2FXeGtLRzlzWkU1dlpHVXVaRzl0S1R0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlHNTFiR3c3WEc0Z0lIMGdaV3h6WlNCcFppQW9hWE5CY25KaGVTaHZiR1JPYjJSbEtTQW1KaUJwYzBGeWNtRjVLR1ZzWlcxbGJuUXBLU0I3WEc0Z0lDQWdjbVYwZFhKdUlISmxZMjl1WTJsc1pVTm9hV3hrY21WdUtIc2daRzl0T2lCd1lYSmxiblJFYjIwc0lHTm9hV3hrVG05a1pYTTZJRzlzWkU1dlpHVWdmU3dnZXlCd2NtOXdjem9nZXlCamFHbHNaSEpsYmpvZ1pXeGxiV1Z1ZENCOUlIMHNJR052Ym5SbGVIUXBPMXh1SUNCOUlHVnNjMlVnYVdZZ0tDaHZiR1JPYjJSbExtVnNaVzFsYm5RZ2ZId2dlMzBwTG5SNWNHVWdJVDA5SUdWc1pXMWxiblF1ZEhsd1pTa2dlMXh1SUNBZ0lHTnZibk4wSUc1dlpHVWdQU0JqY21WaGRHVk9iMlJsS0dWc1pXMWxiblFzSUdOdmJuUmxlSFFwTzF4dVhHNGdJQ0FnYVdZZ0tHOXNaRTV2WkdVdVpXeGxiV1Z1ZENBbUppQjBlWEJsYjJZZ2IyeGtUbTlrWlM1bGJHVnRaVzUwTG5SNWNHVWdQVDA5SUNkbWRXNWpkR2x2YmljZ0ppWWdkSGx3Wlc5bUlHOXNaRTV2WkdVdWFXNXpkR0Z1WTJVdVkyOXRjRzl1Wlc1MFYybHNiRlZ1Ylc5MWJuUWdQVDA5SUNkbWRXNWpkR2x2YmljcElIdGNiaUFnSUNBZ0lHOXNaRTV2WkdVdWFXNXpkR0Z1WTJVdVkyOXRjRzl1Wlc1MFYybHNiRlZ1Ylc5MWJuUW9LVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvYjJ4a1RtOWtaUzVrYjIwZ2ZId2diMnhrVG05a1pWc3dYUzVrYjIwcElIdGNiaUFnSUNBZ0lIQmhjbVZ1ZEVSdmJTNXlaWEJzWVdObFEyaHBiR1FvYm05a1pTNWtiMjBzSUc5c1pFNXZaR1V1Wkc5dElIeDhJRzlzWkU1dlpHVmJNRjB1Wkc5dEtUdGNiaUFnSUNCOVhHNGdJQ0FnY21WMGRYSnVJRzV2WkdVN1hHNGdJSDBnWld4elpTQnBaaUFvZEhsd1pXOW1JR1ZzWlcxbGJuUXVkSGx3WlNBOVBUMGdKM04wY21sdVp5Y3BJSHRjYmlBZ0lDQnZiR1JPYjJSbExtTm9hV3hrVG05a1pYTWdQU0J5WldOdmJtTnBiR1ZEYUdsc1pISmxiaWh2YkdST2IyUmxMQ0JsYkdWdFpXNTBMQ0JqYjI1MFpYaDBLVHRjYmlBZ0lDQjFjR1JoZEdWUWNtOXdaWEowYVdWektHOXNaRTV2WkdVdVpHOXRMQ0J2YkdST2IyUmxMbVZzWlcxbGJuUXVjSEp2Y0hNc0lHVnNaVzFsYm5RdWNISnZjSE1wTzF4dUlDQWdJRzlzWkU1dlpHVXVaV3hsYldWdWRDQTlJR1ZzWlcxbGJuUTdYRzRnSUNBZ2NtVjBkWEp1SUc5c1pFNXZaR1U3WEc0Z0lIMGdaV3h6WlNCN1hHNGdJQ0FnY21WMGRYSnVJSFZ3WkdGMFpVTnZiWEJ2Ym1WdWRDaFRXVTVEWDFKRlRrUkZVaXdnY0dGeVpXNTBSRzl0TENCdmJHUk9iMlJsTENCbGJHVnRaVzUwTENCamIyNTBaWGgwTENCMGNuVmxLVHRjYmlBZ2ZWeHVmVnh1WEc1amIyNXpkQ0J5WldOdmJtTnBiR1ZEYUdsc1pISmxiaUE5SUNodmJHUk9iMlJsTENCbGJHVnRaVzUwTENCamIyNTBaWGgwS1NBOVBpQjdYRzRnSUdOdmJuTjBJRzlzWkVOb2FXeGtUbTlrWlhNZ1BTQnZiR1JPYjJSbExtTm9hV3hrVG05a1pYTWdmSHdnVzEwN1hHNGdJR052Ym5OMElHTm9hV3hrUld4bGJXVnVkSE1nUFNCbGJHVnRaVzUwTG5CeWIzQnpMbU5vYVd4a2NtVnVJSHg4SUZ0ZE8xeHVJQ0JqYjI1emRDQmphR2xzWkU1dlpHVnpJRDBnVzEwN1hHNGdJR052Ym5OMElHeGxibWQwYUNBOUlFMWhkR2d1YldGNEtHOXNaRU5vYVd4a1RtOWtaWE11YkdWdVozUm9MQ0JqYUdsc1pFVnNaVzFsYm5SekxteGxibWQwYUNrN1hHNGdJR1p2Y2lBb2JHVjBJR2tnUFNBd095QnBJRHdnYkdWdVozUm9PeUJwS3lzcElIdGNiaUFnSUNCamIyNXpkQ0JqYUdsc1pFNXZaR1VnUFNCeVpXTnZibU5wYkdVb2IyeGtUbTlrWlM1a2IyMHNJRzlzWkVOb2FXeGtUbTlrWlhOYmFWMHNJR05vYVd4a1JXeGxiV1Z1ZEhOYmFWMHNJR052Ym5SbGVIUXBPMXh1SUNBZ0lHTm9hV3hrVG05a1pYTXVjSFZ6YUNoamFHbHNaRTV2WkdVcE8xeHVJQ0I5WEc0Z0lISmxkSFZ5YmlCamFHbHNaRTV2WkdWek8xeHVmVnh1WEc1amIyNXpkQ0IxY0dSaGRHVlFjbTl3WlhKMGFXVnpJRDBnS0dSdmJTd2diMnhrVUhKdmNITXNJSEJ5YjNCektTQTlQaUI3WEc0Z0lHWnZjaUFvYm1GdFpTQnBiaUJ2YkdSUWNtOXdjeWtnZTF4dUlDQWdJR2xtSUNod2NtOXdjMXR1WVcxbFhTQTlQU0J1ZFd4c0tTQjdYRzRnSUNBZ0lDQnpaWFJCWTJObGMzTnZjaWhrYjIwc0lHNWhiV1VzSUhWdVpHVm1hVzVsWkNrN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1ptOXlJQ2h1WVcxbElHbHVJSEJ5YjNCektTQjdYRzRnSUNBZ0x5OGdabWw0T2lCdVlXMWxJRDA5UFNBbmRtRnNkV1VuSUh4OElHNWhiV1VnUFQwOUlDZGphR1ZqYTJWa0p5QS9JR1J2YlZ0dVlXMWxYU0E2SUc5c1pGQnliM0J6VzI1aGJXVmRYRzRnSUNBZ2FXWWdLSEJ5YjNCelcyNWhiV1ZkSUNFOVBTQnZiR1JRY205d2MxdHVZVzFsWFNrZ2UxeHVJQ0FnSUNBZ2MyVjBRV05qWlhOemIzSW9aRzl0TENCdVlXMWxMQ0J3Y205d2MxdHVZVzFsWFNrN1hHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc1Y2JtTnZibk4wSUhObGRFRmpZMlZ6YzI5eUlEMGdLR1J2YlN3Z2JtRnRaU3dnZG1Gc2RXVXBJRDArSUh0Y2JpQWdMeThnWTJ4aGMzTk9ZVzFsSUdoMGJXeEdiM0pjYmlBZ2FXWWdLRzVoYldVZ1BUMDlJQ2RqYkdGemMwNWhiV1VuS1NCN1hHNGdJQ0FnYm1GdFpTQTlJQ2RqYkdGemN5YzdYRzRnSUgxY2JseHVJQ0JwWmlBb2JtRnRaU0E5UFQwZ0oyaDBiV3hHYjNJbktTQjdYRzRnSUNBZ2JtRnRaU0E5SUNkbWIzSW5PMXh1SUNCOVhHNWNiaUFnYVdZZ0tHNWhiV1VnUFQwOUlDZHJaWGtuSUh4OElHNWhiV1VnUFQwOUlDZGphR2xzWkhKbGJpY2dmSHdnYm1GdFpTQTlQVDBnSjJsdWJtVnlTRlJOVENjcElIdGNiaUFnSUNBdkx5QnBaMjV2Y21WY2JpQWdmU0JsYkhObElHbG1JQ2h1WVcxbElEMDlQU0FuYm05a1pWWmhiSFZsSnlrZ2UxeHVJQ0FnSUdSdmJTNXViMlJsVm1Gc2RXVWdQU0IyWVd4MVpUdGNiaUFnZlNCbGJITmxJR2xtSUNodVlXMWxJRDA5UFNBbmNtVm1KeUFtSmlCMllXeDFaU0FoUFNCdWRXeHNLU0I3WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUIyWVd4MVpTQTlQVDBnSjJaMWJtTjBhVzl1SnlrZ2UxeHVJQ0FnSUNBZ2RtRnNkV1VvWkc5dEtUdGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ25jbVZtSUhOb2IzVnNaQ0JpWlNCaGJpQm1kVzVqZEdsdmJpY3BPMXh1SUNBZ0lIMWNiaUFnZlNCbGJITmxJR2xtSUNodVlXMWxJRDA5UFNBbmMzUjViR1VuS1NCN1hHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCMllXeDFaU0E5UFQwZ0oyOWlhbVZqZENjcElIdGNiaUFnSUNBZ0lHWnZjaUFvYkdWMElHa2dhVzRnZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJQ0FnWkc5dExuTjBlV3hsVzJsZElEMGdkSGx3Wlc5bUlIWmhiSFZsVzJsZElEMDlQU0FuYm5WdFltVnlKeUEvSUdBa2UzWmhiSFZsVzJsZGZYQjRZQ0E2SUhaaGJIVmxXMmxkTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoMGVYQmxiMllnZG1Gc2RXVWdQVDA5SUNkemRISnBibWNuSUh4OElIWmhiSFZsSUQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0FnSUdSdmJTNXpkSGxzWlNBOUlIWmhiSFZsTzF4dUlDQWdJSDFjYmlBZ2ZTQmxiSE5sSUdsbUlDaHVZVzFsSUQwOVBTQW5aR0Z1WjJWeWIzVnpiSGxUWlhSSmJtNWxja2hVVFV3bktTQjdYRzRnSUNBZ2FXWWdLSFI1Y0dWdlppQjJZV3gxWlNBOVBUMGdKMjlpYW1WamRDY3BJSHRjYmlBZ0lDQWdJR1J2YlM1cGJtNWxja2hVVFV3Z1BTQjJZV3gxWlM1ZlgyaDBiV3c3WEc0Z0lDQWdmVnh1SUNCOUlHVnNjMlVnYVdZZ0tHNWhiV1V1YzNSaGNuUnpWMmwwYUNnbmIyNG5LU2tnZTF4dUlDQWdJR052Ym5OMElIVnpaVU5oY0hSMWNtVWdQU0J1WVcxbExtVnVaSE5YYVhSb0tDZERZWEIwZFhKbEp5azdYRzRnSUNBZ1kyOXVjM1FnWlhabGJuUlVlWEJsSUQwZ2JtRnRaUzUwYjB4dmQyVnlRMkZ6WlNncExuTjFZbk4wY21sdVp5Z3lLVHRjYmlBZ0lDQnBaaUFvZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJR1J2YlM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0dWMlpXNTBWSGx3WlN3Z1pYWmxiblJRY205NGVTd2dkWE5sUTJGd2RIVnlaU2s3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHUnZiUzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0dWMlpXNTBWSGx3WlN3Z1pYWmxiblJRY205NGVTd2dkWE5sUTJGd2RIVnlaU2s3WEc0Z0lDQWdmVnh1SUNBZ0lDaGtiMjB1WDJ4cGMzUmxibVZ5SUh4OElDaGtiMjB1WDJ4cGMzUmxibVZ5SUQwZ2UzMHBLVnRsZG1WdWRGUjVjR1ZkSUQwZ2RtRnNkV1U3WEc0Z0lIMGdaV3h6WlNCN1hHNGdJQ0FnWkc5dExuTmxkRUYwZEhKcFluVjBaU2h1WVcxbExDQjJZV3gxWlNrN1hHNGdJSDFjYm4xY2JseHVablZ1WTNScGIyNGdaWFpsYm5SUWNtOTRlU2hsS1NCN1hHNGdJSEpsZEhWeWJpQjBhR2x6TGw5c2FYTjBaVzVsY2x0bExuUjVjR1ZkS0dVcE8xeHVmVnh1WEc1bGVIQnZjblFnZXlCamNtVmhkR1ZGYkdWdFpXNTBMQ0J5Wlc1a1pYSXNJSEpsWTI5dVkybHNaU3dnWTNKbFlYUmxUbTlrWlN3Z2NtVmpiMjVqYVd4bFEyaHBiR1J5Wlc0Z2ZUdGNiaUpkTENKdFlYQndhVzVuY3lJNklqczdPenM3T3pzN096czdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJSa0U3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVVZCTzBGQlEwRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUVVFN1FVRkdRVHRCUVVsQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlFVRTdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVRkJPMEZCUTBFN1FVRkZRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlmUT09XFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vc3JjL3JlbmRlci5qc1xcblwiKTtcbiAgICAgICAgLyoqKi9cbiAgICAgIH0sXG5cbiAgICAgIC8qKiovXG4gICAgICBcIi4vc3JjL3V0aWxzLmpzXCI6XG4gICAgICAvKiEqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAgICAgICAhKioqIC4vc3JjL3V0aWxzLmpzICoqKiFcbiAgICAgICAgXFwqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgICAvKiEgZXhwb3J0cyBwcm92aWRlZDogaXNBcnJheSwgZGVmZXIsIGZsYXR0ZW4gKi9cblxuICAgICAgLyoqKi9cbiAgICAgIGZ1bmN0aW9uIChtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICAgICAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgICAgICAgZXZhbChcIl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXCJpc0FycmF5XFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBpc0FycmF5OyB9KTtcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXCJkZWZlclxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gZGVmZXI7IH0pO1xcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXFxcImZsYXR0ZW5cXFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIGZsYXR0ZW47IH0pO1xcbnZhciBpc0FycmF5ID0gZnVuY3Rpb24gaXNBcnJheShhcnJheSkge1xcbiAgcmV0dXJuIHR5cGVvZiBBcnJheS5pc0FycmF5ID09PSAnZnVuY3Rpb24nID8gQXJyYXkuaXNBcnJheShhcnJheSkgOiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyYXkpID09PSAnW29iamVjdCBBcnJheV0nO1xcbn07XFxudmFyIGRlZmVyID0gZnVuY3Rpb24gZGVmZXIoZnVuYykge1xcbiAgcmV0dXJuIHR5cGVvZiBQcm9taXNlID09PSAnZnVuY3Rpb24nID8gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jKSA6IHNldFRpbWVvdXQoZnVuYyk7XFxufTtcXG52YXIgZmxhdHRlbiA9IGZ1bmN0aW9uIGZsYXR0ZW4oYXJyYXkpIHtcXG4gIHJldHVybiBhcnJheS5yZWR1Y2UoZnVuY3Rpb24gKGZsYXQsIHRvRmxhdHRlbikge1xcbiAgICByZXR1cm4gZmxhdC5jb25jYXQoaXNBcnJheSh0b0ZsYXR0ZW4pID8gZmxhdHRlbih0b0ZsYXR0ZW4pIDogdG9GbGF0dGVuKTtcXG4gIH0sIFtdKTtcXG59Oy8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXpjbU12ZFhScGJITXVhbk11YW5NaUxDSnpiM1Z5WTJWeklqcGJJbmRsWW5CaFkyczZMeTlGVW1WaFkzUXZMaTl6Y21NdmRYUnBiSE11YW5NL01ESTFaU0pkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKbGVIQnZjblFnWTI5dWMzUWdhWE5CY25KaGVTQTlJR0Z5Y21GNUlEMCtJSFI1Y0dWdlppQkJjbkpoZVM1cGMwRnljbUY1SUQwOVBTQW5ablZ1WTNScGIyNG5JRDhnUVhKeVlYa3VhWE5CY25KaGVTaGhjbkpoZVNrZ09pQlBZbXBsWTNRdWNISnZkRzkwZVhCbExuUnZVM1J5YVc1bkxtTmhiR3dvWVhKeVlYa3BJRDA5UFNBblcyOWlhbVZqZENCQmNuSmhlVjBuTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnWkdWbVpYSWdQU0JtZFc1aklEMCtJSFI1Y0dWdlppQlFjbTl0YVhObElEMDlQU0FuWm5WdVkzUnBiMjRuSUQ4Z1VISnZiV2x6WlM1eVpYTnZiSFpsS0NrdWRHaGxiaWhtZFc1aktTQTZJSE5sZEZScGJXVnZkWFFvWm5WdVl5azdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQm1iR0YwZEdWdUlEMGdZWEp5WVhrZ1BUNGdZWEp5WVhrdWNtVmtkV05sS0NobWJHRjBMQ0IwYjBac1lYUjBaVzRwSUQwK0lHWnNZWFF1WTI5dVkyRjBLR2x6UVhKeVlYa29kRzlHYkdGMGRHVnVLU0EvSUdac1lYUjBaVzRvZEc5R2JHRjBkR1Z1S1NBNklIUnZSbXhoZEhSbGJpa3NJRnRkS1R0Y2JpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGRlFUdEJRVUZCTzBGQlFVRTdRVUZGUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQklpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL3NyYy91dGlscy5qc1xcblwiKTtcbiAgICAgICAgLyoqKi9cbiAgICAgIH1cbiAgICAgIC8qKioqKiovXG5cbiAgICB9KVxuICApO1xufSk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ereact/dist/ereact.development.js\n");

/***/ }),

/***/ "./node_modules/ereact/index.js":
/*!**************************************!*\
  !*** ./node_modules/ereact/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nlet EReact = null;\n\nif (false) {} else {\n  EReact = __webpack_require__(/*! ./dist/ereact.development */ \"./node_modules/ereact/dist/ereact.development.js\");\n}\n\nmodule.exports = EReact.default || EReact;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXJlYWN0L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRVJlYWN0RVJlZHV4Ly4vbm9kZV9tb2R1bGVzL2VyZWFjdC9pbmRleC5qcz85Zjg1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubGV0IEVSZWFjdCA9IG51bGw7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIEVSZWFjdCA9IHJlcXVpcmUoJy4vZGlzdC9lcmVhY3QucHJvZHVjdGlvbicpO1xufSBlbHNlIHtcbiAgRVJlYWN0ID0gcmVxdWlyZSgnLi9kaXN0L2VyZWFjdC5kZXZlbG9wbWVudCcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEVSZWFjdC5kZWZhdWx0IHx8IEVSZWFjdDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ereact/index.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: Provider, connect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Provider\", function() { return Provider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"connect\", function() { return connect; });\n/* harmony import */ var ereact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ereact */ \"./node_modules/ereact/index.js\");\n/* harmony import */ var ereact__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ereact__WEBPACK_IMPORTED_MODULE_0__);\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\nvar storeKey = 'store';\nvar Provider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Provider, _Component);\n\n  function Provider(props) {\n    var _this;\n\n    _classCallCheck(this, Provider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Provider).call(this, props));\n    _this[storeKey] = _this.props[storeKey];\n    return _this;\n  }\n\n  _createClass(Provider, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return _defineProperty({}, storeKey, this[storeKey]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children;\n    }\n  }]);\n\n  return Provider;\n}(ereact__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nfunction connectAdvanced(_ref2) {\n  var mapStateToProps = _ref2.mapStateToProps,\n      mapDispatchToProps = _ref2.mapDispatchToProps;\n  return function wrappedWithConnect(WrappedComponent) {\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    var displayName = \"Connect(\".concat(wrappedComponentName, \")\");\n\n    var Connect =\n    /*#__PURE__*/\n    function (_Component2) {\n      _inherits(Connect, _Component2);\n\n      function Connect(props, context) {\n        var _this2;\n\n        _classCallCheck(this, Connect);\n\n        _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Connect).call(this, props, context));\n        _this2[storeKey] = _this2.context.store;\n        return _this2;\n      }\n\n      _createClass(Connect, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this3 = this;\n\n          var store = this[storeKey];\n\n          if (typeof mapStateToProps === 'function') {\n            store.subscribe(function () {\n              _this3.forceUpdate();\n            });\n          }\n        }\n      }, {\n        key: \"getExtraProps\",\n        value: function getExtraProps() {\n          var store = this[storeKey];\n          var props = {};\n\n          if (typeof mapStateToProps === 'function') {\n            var stateProps = mapStateToProps(store.getState());\n\n            if (_typeof(stateProps) === 'object' && stateProps !== null) {\n              props = Object.assign({}, props, stateProps);\n            }\n          }\n\n          if (typeof mapDispatchToProps === 'function') {\n            var dispatchProps = mapDispatchToProps(store.dispatch);\n\n            if (_typeof(dispatchProps) === 'object' && dispatchProps !== null) {\n              props = Object.assign({}, props, dispatchProps);\n            }\n          }\n\n          return _objectSpread({}, props, store);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var props = this.props;\n          var extraProps = this.getExtraProps();\n          return createElement(WrappedComponent, _objectSpread({}, props, extraProps));\n        }\n      }]);\n\n      return Connect;\n    }(ereact__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n    Connect.displayName = displayName;\n    Connect.WrappedComponent = WrappedComponent;\n    return Connect;\n  };\n}\n\nfunction connect(mapStateToProps, mapDispatchToProps) {\n  return connectAdvanced({\n    mapStateToProps: mapStateToProps,\n    mapDispatchToProps: mapDispatchToProps\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ });
});