(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["EReactERedux"] = factory();
	else
		root["EReactERedux"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/ereact/dist/ereact.development.js":
/*!********************************************************!*\
  !*** ./node_modules/ereact/dist/ereact.development.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n  if (true) module.exports = factory();else {}\n})(window, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"/static\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    {\n      /***/\n      \"./src/component.js\":\n      /*!**************************!*\\\n        !*** ./src/component.js ***!\n        \\**************************/\n\n      /*! exports provided: Component, buildComponent, updateComponent */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"Component\\\", function() { return Component; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"buildComponent\\\", function() { return buildComponent; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"updateComponent\\\", function() { return updateComponent; });\\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \\\"./src/constants.js\\\");\\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./render */ \\\"./src/render.js\\\");\\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \\\"./src/utils.js\\\");\\n\\n\\n\\nvar willRenderQueue = [];\\n\\nfunction Component(props, context) {\\n  this._dirty = false;\\n  this.props = props || {};\\n  this.context = context || {};\\n  this._renderCallbacks = [];\\n}\\n\\nObject.assign(Component.prototype, {\\n  setState: function setState(state, callback) {\\n    if (!this.prevState) {\\n      this.prevState = this.state;\\n    }\\n\\n    this.state = Object.assign({}, this.state, state);\\n\\n    if (typeof callback === 'function') {\\n      this._renderCallbacks.push(callback);\\n    }\\n\\n    var oldNode = this[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]];\\n    var dom = oldNode.dom,\\n        element = oldNode.element;\\n    var parentDom = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(dom) ? dom[0].parentNode : dom.parentNode;\\n    updateComponent(_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"ASYNC_RENDER\\\"], parentDom, oldNode, element, this.context);\\n  },\\n  forceUpdate: function forceUpdate(callback) {\\n    if (typeof callback === 'function') {\\n      this._renderCallbacks.push(callback);\\n    }\\n\\n    var oldNode = this[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]];\\n    var dom = oldNode.dom,\\n        element = oldNode.element;\\n    var parentDom = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(dom) ? dom[0].parentNode : dom.parentNode;\\n    updateComponent(_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"FORCE_RENDER\\\"], parentDom, oldNode, element, this.context);\\n  },\\n  render: function render() {}\\n});\\n\\nvar buildComponent = function buildComponent(element, context) {\\n  var type = element.type,\\n      props = element.props;\\n  var instance = null;\\n  instance = createComponent(type, props, context);\\n  setComponentProps(instance, props);\\n  instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]] = instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]] || {\\n    element: element\\n  };\\n  renderComponent(instance, context);\\n  return instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]];\\n};\\n\\nvar updateComponent = function updateComponent(renderMode, parentDom, oldNode, element, context, isReceiveProps) {\\n  var instance = oldNode.instance;\\n\\n  if (isReceiveProps) {\\n    setComponentProps(instance, element.props);\\n  }\\n\\n  var props = instance.props;\\n  var state = instance.state;\\n  var prevProps = instance.prevProps || props;\\n  var prevState = instance.prevState || state;\\n  var prevContext = instance.prevContext || context;\\n  var skipRender = false;\\n\\n  if (renderMode === _constants__WEBPACK_IMPORTED_MODULE_0__[\\\"ASYNC_RENDER\\\"]) {\\n    if (!instance._dirty && willRenderQueue.push({\\n      instance: instance,\\n      parentDom: parentDom,\\n      oldNode: oldNode,\\n      element: element,\\n      context: context\\n    }) === 1) {\\n      // only first time\\n      instance._dirty = true;\\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"defer\\\"])(function () {\\n        var _willRenderQueue$pop = willRenderQueue.pop(),\\n            nextInstance = _willRenderQueue$pop.instance,\\n            nextParentDom = _willRenderQueue$pop.parentDom,\\n            nextOldNode = _willRenderQueue$pop.oldNode,\\n            nextElement = _willRenderQueue$pop.element,\\n            nextContext = _willRenderQueue$pop.context;\\n\\n        if (nextInstance._dirty) {\\n          updateComponent(_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"SYNC_RENDER\\\"], nextParentDom, nextOldNode, nextElement, nextContext);\\n        }\\n      });\\n    }\\n\\n    return;\\n  }\\n\\n  instance._dirty = false;\\n  instance.props = prevProps;\\n  instance.state = prevState;\\n  instance.context = prevContext;\\n\\n  if (renderMode !== _constants__WEBPACK_IMPORTED_MODULE_0__[\\\"FORCE_RENDER\\\"] && typeof instance.shouldComponentUpdate === 'function' && instance.shouldComponentUpdate(props, state) === false) {\\n    skipRender = true;\\n  } else if (typeof instance.componentWillUpdate === 'function') {\\n    instance.componentWillUpdate(props, state);\\n  }\\n\\n  instance.props = props;\\n  instance.state = state;\\n  instance.context = context;\\n  instance.prevProps = instance.prevState = instance.prevContext = null;\\n\\n  if (!skipRender) {\\n    if (typeof instance.getChildContext === 'function') {\\n      context = Object.assign({}, context, instance.getChildContext());\\n    }\\n\\n    var childElement = instance.render();\\n    var oldChildNode = oldNode.childNode;\\n    var childNode = Object(_render__WEBPACK_IMPORTED_MODULE_1__[\\\"reconcile\\\"])(parentDom, oldChildNode, childElement, context);\\n    var dom = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(childNode) ? childNode.map(function (n) {\\n      return n.dom;\\n    }) : childNode.dom;\\n    Object.assign(oldNode, {\\n      dom: dom,\\n      childNode: childNode,\\n      element: element\\n    });\\n\\n    if (typeof instance.componentDidUpdate === 'function') {\\n      Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"defer\\\"])(function () {\\n        return instance.componentDidUpdate(prevProps, prevState);\\n      });\\n    }\\n\\n    while (instance._renderCallbacks.length) {\\n      instance._renderCallbacks.pop().call(instance);\\n    }\\n  }\\n\\n  return oldNode;\\n};\\n\\nvar createComponent = function createComponent(Constructor, props, context) {\\n  var instance;\\n\\n  if (!(Constructor.prototype && Constructor.prototype.render)) {\\n    var render = function render() {\\n      return Constructor(props);\\n    };\\n\\n    instance = new Component(props, context);\\n    instance.render = render;\\n  } else {\\n    instance = new Constructor(props, context);\\n    Component.call(instance, props, context);\\n  }\\n\\n  instance.constructor = Constructor;\\n  return instance;\\n};\\n\\nvar setComponentProps = function setComponentProps(instance, props) {\\n  var isUpdate = !!instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]];\\n\\n  if (isUpdate && typeof instance.componentWillReceiveProps === 'function') {\\n    instance.componentWillReceiveProps(props);\\n  } else if (!isUpdate && typeof instance.componentWillMount === 'function') {\\n    instance.componentWillMount();\\n  }\\n\\n  if (!instance.prevProps) instance.prevProps = instance.props;\\n  if (!instance.prevContext) instance.prevContext = instance.context;\\n  instance.props = props;\\n};\\n\\nvar renderComponent = function renderComponent(instance, context) {\\n  instance.prevProps = instance.prevState = instance.prevContext = null;\\n\\n  if (typeof instance.getChildContext === 'function') {\\n    context = Object.assign({}, context, instance.getChildContext());\\n  }\\n\\n  var childElement = instance.render();\\n  var childNode = null;\\n  var dom = null;\\n\\n  if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(childElement)) {\\n    childNode = childElement.map(function (element) {\\n      return Object(_render__WEBPACK_IMPORTED_MODULE_1__[\\\"createNode\\\"])(element, context);\\n    });\\n    dom = childNode.map(function (n) {\\n      return n.dom;\\n    });\\n  } else {\\n    childNode = Object(_render__WEBPACK_IMPORTED_MODULE_1__[\\\"createNode\\\"])(childElement, context);\\n    dom = childNode.dom;\\n  }\\n\\n  Object.assign(instance[_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"INTERNAL_NODE\\\"]], {\\n    dom: dom,\\n    childNode: childNode,\\n    instance: instance\\n  });\\n\\n  if (typeof instance.componentDidMount === 'function') {\\n    Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"defer\\\"])(function () {\\n      return instance.componentDidMount();\\n    });\\n  }\\n\\n  while (instance._renderCallbacks.length) {\\n    instance._renderCallbacks.pop().call(instance);\\n  }\\n};\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/component.js\\n\");\n        /***/\n      },\n\n      /***/\n      \"./src/constants.js\":\n      /*!**************************!*\\\n        !*** ./src/constants.js ***!\n        \\**************************/\n\n      /*! exports provided: ATTR_KEY, TEXT_ELEMENT, SYNC_RENDER, ASYNC_RENDER, FORCE_RENDER, INTERNAL_NODE */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ATTR_KEY\\\", function() { return ATTR_KEY; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"TEXT_ELEMENT\\\", function() { return TEXT_ELEMENT; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SYNC_RENDER\\\", function() { return SYNC_RENDER; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"ASYNC_RENDER\\\", function() { return ASYNC_RENDER; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"FORCE_RENDER\\\", function() { return FORCE_RENDER; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"INTERNAL_NODE\\\", function() { return INTERNAL_NODE; });\\n\\n\\nvar TEXT_ELEMENT = \\\"@ereact/__text_element__\\\";\\nvar INTERNAL_NODE = '@ereact/__internal_node';\\nvar ATTR_KEY = '@ereact/__attr_key__'; // Render mode constants\\n\\nvar SYNC_RENDER = '@ereact/render_sync';\\nvar ASYNC_RENDER = '@ereact/render_async';\\nvar FORCE_RENDER = '@ereact/force_update';\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uc3RhbnRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRVJlYWN0Ly4vc3JjL2NvbnN0YW50cy5qcz81ZmIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgVEVYVF9FTEVNRU5UID0gYEBlcmVhY3QvX190ZXh0X2VsZW1lbnRfX2A7XG5cbmNvbnN0IElOVEVSTkFMX05PREUgPSAnQGVyZWFjdC9fX2ludGVybmFsX25vZGUnO1xuXG5jb25zdCBBVFRSX0tFWSA9ICdAZXJlYWN0L19fYXR0cl9rZXlfXyc7XG5cbi8vIFJlbmRlciBtb2RlIGNvbnN0YW50c1xuY29uc3QgU1lOQ19SRU5ERVIgPSAnQGVyZWFjdC9yZW5kZXJfc3luYyc7XG5jb25zdCBBU1lOQ19SRU5ERVIgPSAnQGVyZWFjdC9yZW5kZXJfYXN5bmMnO1xuY29uc3QgRk9SQ0VfUkVOREVSID0gJ0BlcmVhY3QvZm9yY2VfdXBkYXRlJztcblxuZXhwb3J0IHsgQVRUUl9LRVksIFRFWFRfRUxFTUVOVCwgU1lOQ19SRU5ERVIsIEFTWU5DX1JFTkRFUiwgRk9SQ0VfUkVOREVSLCBJTlRFUk5BTF9OT0RFIH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///./src/constants.js\\n\");\n        /***/\n      },\n\n      /***/\n      \"./src/index.js\":\n      /*!**********************!*\\\n        !*** ./src/index.js ***!\n        \\**********************/\n\n      /*! exports provided: default */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _render__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./render */ \\\"./src/render.js\\\");\\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./component */ \\\"./src/component.js\\\");\\n\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = ({\\n  createElement: _render__WEBPACK_IMPORTED_MODULE_0__[\\\"createElement\\\"],\\n  render: _render__WEBPACK_IMPORTED_MODULE_0__[\\\"render\\\"],\\n  Component: _component__WEBPACK_IMPORTED_MODULE_1__[\\\"Component\\\"]\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9FUmVhY3QvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIGNyZWF0ZUVsZW1lbnQgfSBmcm9tICcuL3JlbmRlcic7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudCc7XG5cbmV4cG9ydCBkZWZhdWx0IHsgY3JlYXRlRWxlbWVudCwgcmVuZGVyLCBDb21wb25lbnQgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///./src/index.js\\n\");\n        /***/\n      },\n\n      /***/\n      \"./src/render.js\":\n      /*!***********************!*\\\n        !*** ./src/render.js ***!\n        \\***********************/\n\n      /*! exports provided: createElement, render, reconcile, createNode, reconcileChildren */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"createElement\\\", function() { return createElement; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"render\\\", function() { return render; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"reconcile\\\", function() { return reconcile; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"createNode\\\", function() { return createNode; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"reconcileChildren\\\", function() { return reconcileChildren; });\\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \\\"./src/constants.js\\\");\\n/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./component */ \\\"./src/component.js\\\");\\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \\\"./src/utils.js\\\");\\nfunction _typeof(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\n\\n\\n // render\\n\\nvar render = function render(element, containerDom) {\\n  reconcile(containerDom, null, element, {});\\n}; // createElement\\n\\n\\nvar createElement = function createElement(type, initProps) {\\n  var _ref;\\n\\n  var props = Object.assign({}, initProps);\\n\\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\\n    args[_key - 2] = arguments[_key];\\n  }\\n\\n  var rawChildren = (_ref = []).concat.apply(_ref, args);\\n\\n  var children = rawChildren.filter(function (child) {\\n    return child != null && typeof child !== 'boolean';\\n  }).map(function (child) {\\n    return child instanceof Object ? child : createTextElement(child);\\n  });\\n  props.children = children;\\n  return {\\n    type: type,\\n    props: props,\\n    children: children\\n  };\\n};\\n\\nvar createTextElement = function createTextElement(text) {\\n  return {\\n    type: _constants__WEBPACK_IMPORTED_MODULE_0__[\\\"TEXT_ELEMENT\\\"],\\n    props: {\\n      nodeValue: text\\n    }\\n  };\\n};\\n\\nvar createNode = function createNode(element, context) {\\n  var type = element.type,\\n      props = element.props;\\n  var isTextElement = type === _constants__WEBPACK_IMPORTED_MODULE_0__[\\\"TEXT_ELEMENT\\\"];\\n  var isComponent = typeof type === 'function';\\n\\n  if (isComponent) {\\n    return Object(_component__WEBPACK_IMPORTED_MODULE_1__[\\\"buildComponent\\\"])(element, context);\\n  }\\n\\n  var dom = isTextElement ? document.createTextNode('') : document.createElement(type);\\n  var childNodes = reconcileChildren({\\n    dom: dom\\n  }, element, context);\\n  updateProperties(dom, {}, props);\\n  return {\\n    dom: dom,\\n    element: element,\\n    childNodes: childNodes\\n  };\\n};\\n\\nvar reconcile = function reconcile(parentDom, oldNode, element, context) {\\n  if (oldNode == null) {\\n    if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(element)) {\\n      var _node = element.map(createNode);\\n\\n      _node.forEach(function (n) {\\n        parentDom.appendChild(n.dom);\\n      });\\n    }\\n\\n    var node = createNode(element, context);\\n\\n    if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(node.dom)) {\\n      var doms = Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"flatten\\\"])(node.dom);\\n      doms.forEach(function (dom) {\\n        return parentDom.appendChild(dom);\\n      });\\n    } else if (node.dom) {\\n      parentDom.appendChild(node.dom);\\n    }\\n\\n    return node;\\n  } else if (element == null) {\\n    if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(oldNode)) {\\n      oldNode.forEach(function (n) {\\n        parentDom.removeChild(n.dom);\\n      });\\n    } else if (oldNode.dom) {\\n      parentDom.removeChild(oldNode.dom);\\n    }\\n\\n    return null;\\n  } else if (Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(oldNode) && Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\\\"isArray\\\"])(element)) {\\n    return reconcileChildren({\\n      dom: parentDom,\\n      childNodes: oldNode\\n    }, {\\n      props: {\\n        children: element\\n      }\\n    }, context);\\n  } else if ((oldNode.element || {}).type !== element.type) {\\n    var _node2 = createNode(element, context);\\n\\n    if (oldNode.element && typeof oldNode.element.type === 'function' && typeof oldNode.instance.componentWillUnmount === 'function') {\\n      oldNode.instance.componentWillUnmount();\\n    }\\n\\n    if (oldNode.dom || oldNode[0].dom) {\\n      parentDom.replaceChild(_node2.dom, oldNode.dom || oldNode[0].dom);\\n    }\\n\\n    return _node2;\\n  } else if (typeof element.type === 'string') {\\n    oldNode.childNodes = reconcileChildren(oldNode, element, context);\\n    updateProperties(oldNode.dom, oldNode.element.props, element.props);\\n    oldNode.element = element;\\n    return oldNode;\\n  } else {\\n    return Object(_component__WEBPACK_IMPORTED_MODULE_1__[\\\"updateComponent\\\"])(_constants__WEBPACK_IMPORTED_MODULE_0__[\\\"SYNC_RENDER\\\"], parentDom, oldNode, element, context, true);\\n  }\\n};\\n\\nvar reconcileChildren = function reconcileChildren(oldNode, element, context) {\\n  var oldChildNodes = (oldNode.childNodes || []).filter(function (node) {\\n    return node != null;\\n  });\\n  var childElements = (element.props.children || []).filter(function (node) {\\n    return node != null;\\n  });\\n  var childNodes = [];\\n  var length = Math.max(oldChildNodes.length, childElements.length);\\n\\n  for (var i = 0; i < length; i++) {\\n    var childNode = reconcile(oldNode.dom, oldChildNodes[i], childElements[i], context);\\n    childNodes.push(childNode);\\n  }\\n\\n  return childNodes;\\n};\\n\\nvar updateProperties = function updateProperties(dom, oldProps, props) {\\n  for (name in oldProps) {\\n    if (props[name] == null) {\\n      setAccessor(dom, name, undefined);\\n    }\\n  }\\n\\n  for (name in props) {\\n    // fix: name === 'value' || name === 'checked' ? dom[name] : oldProps[name]\\n    if (props[name] !== oldProps[name]) {\\n      setAccessor(dom, name, props[name]);\\n    }\\n  }\\n};\\n\\nvar setAccessor = function setAccessor(dom, name, value) {\\n  // className htmlFor\\n  if (name === 'className') {\\n    name = 'class';\\n  }\\n\\n  if (name === 'htmlFor') {\\n    name = 'for';\\n  }\\n\\n  if (name === 'key' || name === 'children' || name === 'innerHTML') {// ignore\\n  } else if (name === 'nodeValue') {\\n    dom.nodeValue = value;\\n  } else if (name === 'ref' && value != null) {\\n    if (typeof value === 'function') {\\n      value(dom);\\n    } else {\\n      console.error('ref should be an function');\\n    }\\n  } else if (name === 'style') {\\n    if (_typeof(value) === 'object') {\\n      for (var i in value) {\\n        dom.style[i] = typeof value[i] === 'number' ? \\\"\\\".concat(value[i], \\\"px\\\") : value[i];\\n      }\\n    }\\n\\n    if (typeof value === 'string' || value == null) {\\n      dom.style = value;\\n    }\\n  } else if (name === 'dangerouslySetInnerHTML') {\\n    if (_typeof(value) === 'object') {\\n      dom.innerHTML = value.__html;\\n    }\\n  } else if (name.startsWith('on')) {\\n    var useCapture = name.endsWith('Capture');\\n    var eventType = name.toLowerCase().substring(2);\\n\\n    if (value) {\\n      dom.addEventListener(eventType, eventProxy, useCapture);\\n    } else {\\n      dom.removeEventListener(eventType, eventProxy, useCapture);\\n    }\\n\\n    (dom._listener || (dom._listener = {}))[eventType] = value;\\n  } else {\\n    dom.setAttribute(name, value);\\n  }\\n};\\n\\nfunction eventProxy(e) {\\n  return this._listener[e.type](e);\\n}\\n\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./src/render.js\\n\");\n        /***/\n      },\n\n      /***/\n      \"./src/utils.js\":\n      /*!**********************!*\\\n        !*** ./src/utils.js ***!\n        \\**********************/\n\n      /*! exports provided: isArray, defer, flatten */\n\n      /***/\n      function (module, __webpack_exports__, __webpack_require__) {\n        \"use strict\";\n\n        eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"isArray\\\", function() { return isArray; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"defer\\\", function() { return defer; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"flatten\\\", function() { return flatten; });\\nvar isArray = function isArray(array) {\\n  return typeof Array.isArray === 'function' ? Array.isArray(array) : Object.prototype.toString.call(array) === '[object Array]';\\n};\\nvar defer = function defer(func) {\\n  return typeof Promise === 'function' ? Promise.resolve().then(func) : setTimeout(func);\\n};\\nvar flatten = function flatten(array) {\\n  return array.reduce(function (flat, toFlatten) {\\n    return flat.concat(isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\\n  }, []);\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9FUmVhY3QvLi9zcmMvdXRpbHMuanM/MDI1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgaXNBcnJheSA9IGFycmF5ID0+IHR5cGVvZiBBcnJheS5pc0FycmF5ID09PSAnZnVuY3Rpb24nID8gQXJyYXkuaXNBcnJheShhcnJheSkgOiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJyYXkpID09PSAnW29iamVjdCBBcnJheV0nO1xuXG5leHBvcnQgY29uc3QgZGVmZXIgPSBmdW5jID0+IHR5cGVvZiBQcm9taXNlID09PSAnZnVuY3Rpb24nID8gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jKSA6IHNldFRpbWVvdXQoZnVuYyk7XG5cbmV4cG9ydCBjb25zdCBmbGF0dGVuID0gYXJyYXkgPT4gYXJyYXkucmVkdWNlKChmbGF0LCB0b0ZsYXR0ZW4pID0+IGZsYXQuY29uY2F0KGlzQXJyYXkodG9GbGF0dGVuKSA/IGZsYXR0ZW4odG9GbGF0dGVuKSA6IHRvRmxhdHRlbiksIFtdKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./src/utils.js\\n\");\n        /***/\n      }\n      /******/\n\n    })\n  );\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ereact/dist/ereact.development.js\n");

/***/ }),

/***/ "./node_modules/ereact/index.js":
/*!**************************************!*\
  !*** ./node_modules/ereact/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nlet EReact = null;\n\nif (false) {} else {\n  EReact = __webpack_require__(/*! ./dist/ereact.development */ \"./node_modules/ereact/dist/ereact.development.js\");\n}\n\nmodule.exports = EReact.default || EReact;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXJlYWN0L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vRVJlYWN0RVJlZHV4Ly4vbm9kZV9tb2R1bGVzL2VyZWFjdC9pbmRleC5qcz85Zjg1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubGV0IEVSZWFjdCA9IG51bGw7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIEVSZWFjdCA9IHJlcXVpcmUoJy4vZGlzdC9lcmVhY3QucHJvZHVjdGlvbicpO1xufSBlbHNlIHtcbiAgRVJlYWN0ID0gcmVxdWlyZSgnLi9kaXN0L2VyZWFjdC5kZXZlbG9wbWVudCcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEVSZWFjdC5kZWZhdWx0IHx8IEVSZWFjdDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ereact/index.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: Provider, connect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Provider\", function() { return Provider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"connect\", function() { return connect; });\n/* harmony import */ var ereact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ereact */ \"./node_modules/ereact/index.js\");\n/* harmony import */ var ereact__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ereact__WEBPACK_IMPORTED_MODULE_0__);\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\nvar storeKey = 'store';\nvar Provider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Provider, _Component);\n\n  function Provider(props) {\n    var _this;\n\n    _classCallCheck(this, Provider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Provider).call(this, props));\n    _this[storeKey] = _this.props[storeKey];\n    return _this;\n  }\n\n  _createClass(Provider, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return _defineProperty({}, storeKey, this[storeKey]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children;\n    }\n  }]);\n\n  return Provider;\n}(ereact__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\nfunction connectAdvanced(_ref2) {\n  var mapStateToProps = _ref2.mapStateToProps,\n      mapDispatchToProps = _ref2.mapDispatchToProps;\n  return function wrappedWithConnect(WrappedComponent) {\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    var displayName = \"Connect(\".concat(wrappedComponentName, \")\");\n\n    var Connect =\n    /*#__PURE__*/\n    function (_Component2) {\n      _inherits(Connect, _Component2);\n\n      function Connect(props, context) {\n        var _this2;\n\n        _classCallCheck(this, Connect);\n\n        _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Connect).call(this, props, context));\n        _this2[storeKey] = _this2.context.store;\n        return _this2;\n      }\n\n      _createClass(Connect, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this3 = this;\n\n          var store = this[storeKey];\n\n          if (typeof mapStateToProps === 'function') {\n            store.subscribe(function () {\n              _this3.forceUpdate();\n            });\n          }\n        }\n      }, {\n        key: \"getExtraProps\",\n        value: function getExtraProps() {\n          var store = this[storeKey];\n          var props = {};\n\n          if (typeof mapStateToProps === 'function') {\n            var stateProps = mapStateToProps(store.getState());\n\n            if (_typeof(stateProps) === 'object' && stateProps !== null) {\n              props = Object.assign({}, props, stateProps);\n            }\n          }\n\n          if (typeof mapDispatchToProps === 'function') {\n            var dispatchProps = mapDispatchToProps(store.dispatch);\n\n            if (_typeof(dispatchProps) === 'object' && dispatchProps !== null) {\n              props = Object.assign({}, props, dispatchProps);\n            }\n          }\n\n          return _objectSpread({}, props, store);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var props = this.props;\n          var extraProps = this.getExtraProps();\n          return ereact__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(WrappedComponent, _objectSpread({}, props, extraProps));\n        }\n      }]);\n\n      return Connect;\n    }(ereact__WEBPACK_IMPORTED_MODULE_0__[\"Component\"]);\n\n    Connect.displayName = displayName;\n    Connect.WrappedComponent = WrappedComponent;\n    return Connect;\n  };\n}\n\nfunction connect(mapStateToProps, mapDispatchToProps) {\n  return connectAdvanced({\n    mapStateToProps: mapStateToProps,\n    mapDispatchToProps: mapDispatchToProps\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ });
});